{"version":3,"sources":["/Users/derwilliams/workspace/me/projects/phymoo/www/lib/angular-localforage/dist/angular-localForage.js"],"names":[],"mappings":"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","file":"angular-localForage-compiled.js","sourcesContent":["/**\n * angular-localforage - Angular service & directive for https://github.com/mozilla/localForage (Offline storage, improved.)\n * @version v1.2.2\n * @link https://github.com/ocombe/angular-localForage\n * @license MIT\n * @author Olivier Combe <olivier.combe@gmail.com>\n */\n(function(root, factory) {\n  'use strict';\n\n  if(typeof define === 'function' && define.amd) {                    // AMD\n    define(['localforage'], function(localforage) {\n      factory(root.angular, localforage);\n    });\n  } else if(typeof exports === 'object') {\n    var angular = root.angular || (window && window.angular);\n    module.exports = factory(angular, require('localforage')); // Node/Browserify\n  } else {\n    factory(root.angular, root.localforage);                        // Browser\n  }\n})(this, function(angular, localforage, undefined) {\n  'use strict';\n\n  var angularLocalForage = angular.module('LocalForageModule', ['ng']);\n  angularLocalForage.provider('$localForage', function() {\n    var lfInstances = {},\n      defaultConfig = {\n        name: 'lf'\n      },\n    // Send signals for each of the following actions ?\n      notify = {\n        setItem: false,\n        removeItem: false\n      },\n      watchers = {};\n\n    // Setter for notification config, itemSet & itemRemove should be booleans\n    this.setNotify = function(itemSet, itemRemove) {\n      notify = {\n        setItem: itemSet,\n        removeItem: itemRemove\n      };\n    };\n\n    this.config = function(config) {\n      if(!angular.isObject(config)) {\n        throw new Error('The config parameter should be an object');\n      }\n      angular.extend(defaultConfig, config);\n    };\n\n    this.$get = ['$rootScope', '$q', '$parse', function($rootScope, $q, $parse) {\n      var LocalForageInstance = function LocalForageInstance(params) {\n        if(angular.isDefined(params)) {\n          this._localforage = localforage.createInstance(params);\n        } else {\n          this._localforage = localforage;\n          localforage.config(defaultConfig);\n        }\n      };\n\n      LocalForageInstance.prototype.createInstance = function createInstance(config) {\n        if(angular.isObject(config)) { // create new instance\n          config = angular.extend({}, defaultConfig, config);\n          if(angular.isDefined(lfInstances[config.name])) {\n            throw new Error('A localForage instance with the name ' + config.name + ' is already defined.');\n          }\n\n          lfInstances[config.name] = new LocalForageInstance(config);\n          return lfInstances[config.name];\n        } else {\n          throw new Error('The parameter should be a config object.')\n        }\n      };\n\n      LocalForageInstance.prototype.instance = function instance(name) {\n        if(angular.isUndefined(name)) {\n          return lfInstances[defaultConfig.name];\n        } else if(angular.isString(name)) {\n          if(angular.isDefined(lfInstances[name])) {\n            return lfInstances[name];\n          } else {\n            throw new Error('No localForage instance of that name exists.')\n          }\n        } else {\n          throw new Error('The parameter should be a string.')\n        }\n      };\n\n      // Setter for the storage driver\n      LocalForageInstance.prototype.setDriver = function setDriver(driver) {\n        return this._localforage.setDriver(driver);\n      };\n\n      // Getter for the storage driver\n      LocalForageInstance.prototype.driver = function driver() {\n        return this._localforage.driver();\n      };\n\n      // Directly adds a value to storage\n      LocalForageInstance.prototype.setItem = function setItem(key, value) {\n        // throw error on undefined key, we allow undefined value because... why not ?\n        if(angular.isUndefined(key)) {\n          throw new Error(\"You must define a key to set\");\n        }\n\n        var self = this;\n\n        if(angular.isArray(key)) {\n          if(!angular.isArray(value)) {\n            throw new Error('If you set an array of keys, the values should be an array too');\n          }\n\n          var promises = [];\n          angular.forEach(key, function(k, index) {\n            promises.push(self.setItem(k, value[index]))\n          });\n\n          return $q.all(promises);\n        } else {\n          var deferred = $q.defer(),\n            args = arguments,\n            localCopy = typeof Blob !== 'undefined' && value instanceof Blob ? value : angular.copy(value);\n\n          //avoid $promises attributes from value objects, if present.\n          if(angular.isObject(localCopy) && angular.isDefined(localCopy.$promise)) {\n            delete localCopy.$promise; //delete attribut from object structure.\n          }\n\n          self._localforage.setItem(self.prefix() + key, localCopy).then(function success() {\n            if(notify.setItem) {\n              $rootScope.$broadcast('LocalForageModule.setItem', {\n                key: key,\n                newvalue: localCopy,\n                driver: self.driver()\n              });\n            }\n            deferred.resolve(localCopy);\n          }, function error(data) {\n            self.onError(data, args, self.setItem, deferred);\n          });\n\n          return deferred.promise;\n        }\n      };\n\n      // Directly get a value from storage\n      LocalForageInstance.prototype.getItem = function getItem(key) {\n        // throw error on undefined key\n        if(angular.isUndefined(key)) {\n          throw new Error(\"You must define a key to get\");\n        }\n\n        var deferred = $q.defer(),\n          args = arguments,\n          self = this,\n          promise;\n\n        if(angular.isArray(key)) {\n          var res = [],\n            found = 0;\n          promise = self._localforage.iterate(function(value, k) {\n            var index = key.indexOf(self.prefix() + k);\n            if(index > -1) {\n              res[index] = value;\n              found++;\n            }\n            if(found === key.length) {\n              return res;\n            }\n          });\n        } else {\n          promise = self._localforage.getItem(self.prefix() + key);\n        }\n\n        promise.then(function success(item) {\n          deferred.resolve(item || res);\n        }, function error(data) {\n          self.onError(data, args, self.getItem, deferred);\n        });\n\n        return deferred.promise;\n      };\n\n      // Iterate over all the values in storage\n      LocalForageInstance.prototype.iterate = function iterate(callback) {\n        // throw error on undefined key\n        if(angular.isUndefined(callback)) {\n          throw new Error(\"You must define a callback to iterate\");\n        }\n\n        var deferred = $q.defer(),\n          args = arguments,\n          self = this;\n\n        self._localforage.iterate(callback).then(function success(item) {\n          deferred.resolve(item);\n        }, function error(data) {\n          self.onError(data, args, self.iterate, deferred);\n        });\n\n        return deferred.promise;\n      };\n\n      // Remove an item from storage\n      LocalForageInstance.prototype.removeItem = function removeItem(key) {\n        // throw error on undefined key\n        if(angular.isUndefined(key)) {\n          throw new Error(\"You must define a key to remove\");\n        }\n\n        var self = this;\n\n        if(angular.isArray(key)) {\n          var promises = [];\n          angular.forEach(key, function(k, index) {\n            promises.push(self.removeItem(k));\n          });\n\n          return $q.all(promises);\n        } else {\n          var deferred = $q.defer(),\n            args = arguments;\n\n          self._localforage.removeItem(self.prefix() + key).then(function success() {\n            if(notify.removeItem) {\n              $rootScope.$broadcast('LocalForageModule.removeItem', {key: key, driver: self.driver()});\n            }\n            deferred.resolve();\n          }, function error(data) {\n            self.onError(data, args, self.removeItem, deferred);\n          });\n\n          return deferred.promise;\n        }\n      };\n\n      // Get an item and removes it from storage\n      LocalForageInstance.prototype.pull = function pull(key) {\n        // throw error on undefined key\n        if(angular.isUndefined(key)) {\n          throw new Error(\"You must define a key to pull\");\n        }\n\n        var self = this,\n          deferred = $q.defer(),\n          onError = function error(err) {\n            deferred.reject(err);\n          };\n\n        self.getItem(key).then(function success(value) {\n          self.removeItem(key).then(function success() {\n            deferred.resolve(value);\n          }, onError);\n        }, onError);\n\n        return deferred.promise;\n      };\n\n      // Remove all data for this app from storage\n      LocalForageInstance.prototype.clear = function clear() {\n        var deferred = $q.defer(),\n          args = arguments,\n          self = this;\n\n        self._localforage.clear().then(function success(keys) {\n          deferred.resolve();\n        }, function error(data) {\n          self.onError(data, args, self.clear, deferred);\n        });\n        return deferred.promise;\n      };\n\n      // Return the key for item at position n\n      LocalForageInstance.prototype.key = function key(n) {\n        // throw error on undefined n\n        if(angular.isUndefined(n)) {\n          throw new Error(\"You must define a position to get for the key function\");\n        }\n\n        var deferred = $q.defer(),\n          args = arguments,\n          self = this;\n\n        self._localforage.key(n).then(function success(key) {\n          deferred.resolve(key);\n        }, function error(data) {\n          self.onError(data, args, self.key, deferred);\n        });\n        return deferred.promise;\n      };\n\n      var keys = function keys() {\n        var deferred = $q.defer(),\n          args = arguments,\n          self = this;\n\n        self._localforage.keys().then(function success(keyList) {\n          if(defaultConfig.oldPrefix && self.driver() === 'localStorageWrapper') {\n            var tempKeyList = [];\n            for(var i = 0, len = keyList.length; i < len; i++) {\n              tempKeyList.push(keyList[i].substr(self.prefix().length, keyList[i].length));\n            }\n            keyList = tempKeyList;\n          }\n          deferred.resolve(keyList);\n        }, function error(data) {\n          self.onError(data, args, self.keys, deferred);\n        });\n        return deferred.promise;\n      };\n\n      // Return the list of keys stored for this application\n      LocalForageInstance.prototype.keys = keys;\n\n      // deprecated\n      LocalForageInstance.prototype.getKeys = keys;\n\n      // Returns the number of keys in this storage\n      LocalForageInstance.prototype.length = function() {\n        var deferred = $q.defer(),\n          args = arguments,\n          self = this;\n\n        self._localforage.length().then(function success(length) {\n          deferred.resolve(length);\n        }, function error(data) {\n          self.onError(data, args, length, deferred);\n        });\n        return deferred.promise;\n      };\n\n      /**\n       * Bind - let's you directly bind a LocalForage value to a $scope variable\n       * @param {Angular $scope} $scope - the current scope you want the variable available in\n       * @param {String/Object} opts - the key name of the variable you are binding OR an object with the key and custom options like default value or instance name\n       * Here are the available options you can set:\n       * * key: the key used in storage and in the scope (if scopeKey isn't defined)\n       * * defaultValue: the default value\n       * * name: name of the instance that should store the data\n       * * scopeKey: the key used in the scope\n       * @returns {*} - returns whatever the stored value is\n       */\n      LocalForageInstance.prototype.bind = function bind($scope, opts) {\n        if(angular.isString(opts)) {\n          opts = {\n            key: opts\n          }\n        } else if(!angular.isObject(opts) || angular.isUndefined(opts.key)) {\n          throw new Error(\"You must define a key to bind\");\n        }\n\n        var defaultOpts = {\n          defaultValue: '',\n          name: defaultConfig.name\n        };\n\n        // If no defined options we use defaults otherwise extend defaults\n        opts = angular.extend({}, defaultOpts, opts);\n\n        var self = lfInstances[opts.name];\n\n        if(angular.isUndefined(self)) {\n          throw new Error(\"You must use the name of an existing instance\");\n        }\n\n        // Set the storeName key for the LocalForage entry\n        // use user defined in specified\n        var scopeKey = opts.scopeKey || opts.key,\n          model = $parse(scopeKey);\n\n        return self.getItem(opts.key).then(function(item) {\n          if(item) { // If it does exist assign it to the $scope value\n            model.assign($scope, item);\n          } else if(opts.defaultValue) { // If a value doesn't already exist store it as is\n            model.assign($scope, opts.defaultValue);\n            self.setItem(opts.key, opts.defaultValue);\n          }\n\n          // Register a listener for changes on the $scope value\n          // to update the localForage value\n          if(angular.isDefined(watchers[opts.key])) {\n            watchers[opts.key]();\n          }\n\n          watchers[opts.key] = $scope.$watch(scopeKey, function(val) {\n            if(angular.isDefined(val)) {\n              self.setItem(opts.key, val);\n            }\n          }, true);\n          return item;\n        });\n      };\n\n      /**\n       * Unbind - let's you unbind a variable from localForage while removing the value from both\n       * the localForage and the local variable and sets it to null\n       * @param {String/Object} opts - the key name of the variable you are unbinding OR an object with the key and custom options like default value or instance name\n       * Here are the available options you can set:\n       * * key: the key used in storage and in the scope (if scopeKey isn't defined)\n       * * name: name of the instance that should store the data\n       * * scopeKey: the key used in the scope\n       */\n      LocalForageInstance.prototype.unbind = function unbind($scope, opts) {\n        if(angular.isString(opts)) {\n          opts = {\n            key: opts\n          }\n        } else if(!angular.isObject(opts) || angular.isUndefined(opts.key)) {\n          throw new Error(\"You must define a key to unbind\");\n        }\n\n        var defaultOpts = {\n          scopeKey: opts.key,\n          name: defaultConfig.name\n        };\n\n        // If no defined options we use defaults otherwise extend defaults\n        opts = angular.extend({}, defaultOpts, opts);\n\n        var self = lfInstances[opts.name];\n\n        if(angular.isUndefined(self)) {\n          throw new Error(\"You must use the name of an existing instance\");\n        }\n\n        $parse(opts.scopeKey).assign($scope, null);\n        if(angular.isDefined(watchers[opts.key])) {\n          watchers[opts.key](); // unwatch\n          delete watchers[opts.key];\n        }\n        return self.removeItem(opts.key);\n      };\n\n      LocalForageInstance.prototype.prefix = function() {\n        return this.driver() === 'localStorageWrapper' && defaultConfig.oldPrefix ? this._localforage.config().name + '.' : '';\n      };\n\n      // Handling errors\n      LocalForageInstance.prototype.onError = function(err, args, fct, deferred) {\n        // test for private browsing errors in Firefox & Safari\n        if(((angular.isObject(err) && err.name ? err.name === 'InvalidStateError' : (angular.isString(err) && err === 'InvalidStateError')) && this.driver() === 'asyncStorage')\n          || (angular.isObject(err) && err.code && err.code === 5)) {\n          var self = this;\n\n          self.setDriver('localStorageWrapper').then(function() {\n            fct.apply(self, args).then(function(item) {\n              deferred.resolve(item);\n            }, function(data) {\n              deferred.reject(data);\n            });\n          }, function() {\n            deferred.reject(err);\n          });\n        } else {\n          deferred.reject(err);\n        }\n      };\n\n      lfInstances[defaultConfig.name] = new LocalForageInstance();\n      return lfInstances[defaultConfig.name];\n    }]\n  });\n\n  angularLocalForage.directive('localForage', ['$localForage', function($localForage) {\n    return {\n      restrict: 'A',\n      link: function($scope, $element, $attrs) {\n        var opts = $scope.$eval($attrs.localForage);\n        if(angular.isObject(opts) && angular.isDefined(opts.key)) {\n          $localForage.bind($scope, opts);\n        } else {\n          $localForage.bind($scope, $attrs.localForage);\n        }\n      }\n    }\n  }]);\n});\n\n"]}