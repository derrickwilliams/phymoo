{"version":3,"sources":["/Users/derwilliams/workspace/me/projects/phymoo/www/lib/localforage/Gruntfile.js"],"names":[],"mappings":"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","file":"Gruntfile-compiled.js","sourcesContent":["/* jshint node:true */\nvar path = require('path');\nvar saucelabsBrowsers = require(path.resolve('test', 'saucelabs-browsers.js'));\n\nvar sourceFiles = [\n    'Gruntfile.js',\n    'src/*.js',\n    'src/**/*.js',\n    'test/**/test.*.js'\n];\n\nmodule.exports = exports = function(grunt) {\n    'use strict';\n\n    var BANNER = '/*!\\n' +\n                 '    localForage -- Offline Storage, Improved\\n' +\n                 '    Version ' + grunt.file.readJSON('package.json').version + '\\n' +\n                 '    https://mozilla.github.io/localForage\\n' +\n                 '    (c) 2013-2015 Mozilla, Apache License 2.0\\n' +\n                 '*/\\n';\n\n    grunt.initConfig({\n        concat: {\n            options: {\n                separator: ''\n            },\n            localforage: {\n                files: {\n                    'dist/localforage.js': [\n                        // https://github.com/jakearchibald/es6-promise\n                        'bower_components/es6-promise/promise.js',\n                        'src/utils/**/*.js',\n                        'src/drivers/**/*.js',\n                        'src/localforage.js'\n                    ],\n                    'dist/localforage.nopromises.js': [\n                        'src/utils/**/*.js',\n                        'src/drivers/**/*.js',\n                        'src/localforage.js'\n                    ]\n                },\n                options: {\n                    banner: BANNER\n                }\n            }\n        },\n        connect: {\n            test: {\n                options: {\n                    base: '.',\n                    hostname: '*',\n                    port: 9999,\n                    middleware: function(connect) {\n                        return [\n                            function(req, res, next) {\n                                res.setHeader('Access-Control-Allow-Origin',\n                                              '*');\n                                res.setHeader('Access-Control-Allow-Methods',\n                                              '*');\n\n                                return next();\n                            },\n                            connect.static(require('path').resolve('.'))\n                        ];\n                    }\n                }\n            }\n        },\n        es3_safe_recast: {\n            dist: {\n                files: [{\n                    src: ['dist/localforage.js'],\n                    dest: 'dist/localforage.js'\n                }]\n            },\n            nopromises: {\n                files: [{\n                    src: ['dist/localforage.nopromises.js'],\n                    dest: 'dist/localforage.nopromises.js'\n                }]\n            }\n        },\n        jscs: {\n            source: sourceFiles\n        },\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc'\n            },\n            source: sourceFiles\n        },\n        mocha: {\n            unit: {\n                options: {\n                    urls: [\n                        'http://localhost:9999/test/test.component.html',\n                        'http://localhost:9999/test/test.nodriver.html',\n                        'http://localhost:9999/test/test.main.html',\n                        'http://localhost:9999/test/test.min.html',\n                        'http://localhost:9999/test/test.require.html',\n                        'http://localhost:9999/test/test.callwhenready.html',\n                        'http://localhost:9999/test/test.customdriver.html'\n                    ]\n                }\n            }\n        },\n        open: {\n            site: {\n                path: 'http://localhost:4567/'\n            }\n        },\n        'saucelabs-mocha': {\n            all: {\n                options: {\n                    username: process.env.SAUCE_USERNAME,\n                    key: process.env.SAUCE_ACCESS_KEY,\n                    urls: ['http://localhost:9999/test/test.main.html'],\n                    tunnelTimeout: 5,\n                    build: process.env.TRAVIS_JOB_ID,\n                    concurrency: 3,\n                    browsers: saucelabsBrowsers,\n                    testname: 'localForage Tests'\n                }\n            }\n        },\n        shell: {\n            options: {\n                stdout: true\n            },\n            component: {\n                command: path.resolve('node_modules', 'component', 'bin',\n                                      'component-build') +\n                         ' --dev -o test -n localforage.component'\n            },\n            'publish-site': {\n                command: 'rake publish ALLOW_DIRTY=true'\n            },\n            'serve-site': {\n                command: 'bundle exec middleman server'\n            }\n        },\n        uglify: {\n            localforage: {\n                files: {\n                    'dist/localforage.min.js': ['dist/localforage.js'],\n                    'dist/localforage.nopromises.min.js': [\n                        'dist/localforage.nopromises.js'\n                    ],\n                    'site/localforage.min.js': ['dist/localforage.js']\n                },\n                options: {\n                    banner: BANNER\n                }\n            }\n        },\n        watch: {\n            build: {\n                files: ['src/*.js', 'src/**/*.js'],\n                tasks: ['build']\n            },\n            /*jshint scripturl:true */\n            'mocha:unit': {\n                files: [\n                    'dist/localforage.js',\n                    'test/runner.js',\n                    'test/test.*.*'\n                ],\n                tasks: ['jshint', 'jscs', 'shell:component', 'mocha:unit']\n            }\n        }\n    });\n\n    require('load-grunt-tasks')(grunt);\n\n    grunt.registerTask('default', ['build', 'connect', 'watch']);\n    grunt.registerTask('build', ['concat', 'es3_safe_recast', 'uglify']);\n    grunt.registerTask('publish', ['build', 'shell:publish-site']);\n    grunt.registerTask('serve', ['build', 'connect:test', 'watch']);\n    grunt.registerTask('site', ['shell:serve-site']);\n\n    // These are the test tasks we run regardless of Sauce Labs credentials.\n    var testTasks = [\n        'build',\n        'jshint',\n        'jscs',\n        'shell:component',\n        'connect:test',\n        'mocha'\n    ];\n    grunt.registerTask('test:local', testTasks.slice());\n\n    // Run tests using Sauce Labs if we are on Travis or have locally\n    // available Sauce Labs credentials. Use `grunt test:local` to skip\n    // Sauce Labs tests.\n    // if (process.env.TRAVIS_JOB_ID ||\n    //     (process.env.SAUCE_USERNAME && process.env.SAUCE_ACCESS_KEY)) {\n    //     testTasks.push('saucelabs-mocha');\n    // }\n\n    grunt.registerTask('test', testTasks);\n};\n"]}