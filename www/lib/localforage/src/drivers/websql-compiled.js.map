{"version":3,"sources":["/Users/derwilliams/workspace/me/projects/phymoo/www/lib/localforage/src/drivers/websql.js"],"names":[],"mappings":"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","file":"websql-compiled.js","sourcesContent":["/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function() {\n    'use strict';\n\n    // Promises!\n    var Promise = (typeof module !== 'undefined' && module.exports && typeof require !== 'undefined') ?\n                  require('promise') : this.Promise;\n\n    var globalObject = this;\n    var serializer = null;\n    var openDatabase = this.openDatabase;\n\n    // If WebSQL methods aren't available, we can stop now.\n    if (!openDatabase) {\n        return;\n    }\n\n    var ModuleType = {\n        DEFINE: 1,\n        EXPORT: 2,\n        WINDOW: 3\n    };\n\n    // Attaching to window (i.e. no module loader) is the assumed,\n    // simple default.\n    var moduleType = ModuleType.WINDOW;\n\n    // Find out what kind of module setup we have; if none, we'll just attach\n    // localForage to the main window.\n    if (typeof module !== 'undefined' && module.exports && typeof require !== 'undefined') {\n        moduleType = ModuleType.EXPORT;\n    } else if (typeof define === 'function' && define.amd) {\n        moduleType = ModuleType.DEFINE;\n    }\n\n    // Open the WebSQL database (automatically creates one if one didn't\n    // previously exist), using any options set in the config.\n    function _initStorage(options) {\n        var self = this;\n        var dbInfo = {\n            db: null\n        };\n\n        if (options) {\n            for (var i in options) {\n                dbInfo[i] = typeof(options[i]) !== 'string' ?\n                            options[i].toString() : options[i];\n            }\n        }\n\n        var serializerPromise = new Promise(function(resolve/*, reject*/) {\n            // We allow localForage to be declared as a module or as a\n            // library available without AMD/require.js.\n            if (moduleType === ModuleType.DEFINE) {\n                require(['localforageSerializer'], resolve);\n            } else if (moduleType === ModuleType.EXPORT) {\n                // Making it browserify friendly\n                resolve(require('./../utils/serializer'));\n            } else {\n                resolve(globalObject.localforageSerializer);\n            }\n        });\n\n        var dbInfoPromise = new Promise(function(resolve, reject) {\n            // Open the database; the openDatabase API will automatically\n            // create it for us if it doesn't exist.\n            try {\n                dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version),\n                                         dbInfo.description, dbInfo.size);\n            } catch (e) {\n                return self.setDriver(self.LOCALSTORAGE).then(function() {\n                    return self._initStorage(options);\n                }).then(resolve).catch(reject);\n            }\n\n            // Create our key/value table if it doesn't exist.\n            dbInfo.db.transaction(function(t) {\n                t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName +\n                             ' (id INTEGER PRIMARY KEY, key unique, value)', [],\n                             function() {\n                    self._dbInfo = dbInfo;\n                    resolve();\n                }, function(t, error) {\n                    reject(error);\n                });\n            });\n        });\n\n        return serializerPromise.then(function(lib) {\n            serializer = lib;\n            return dbInfoPromise;\n        });\n    }\n\n    function getItem(key, callback) {\n        var self = this;\n\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n            window.console.warn(key +\n                                ' used as a key, but it is not a string.');\n            key = String(key);\n        }\n\n        var promise = new Promise(function(resolve, reject) {\n            self.ready().then(function() {\n                var dbInfo = self._dbInfo;\n                dbInfo.db.transaction(function(t) {\n                    t.executeSql('SELECT * FROM ' + dbInfo.storeName +\n                                 ' WHERE key = ? LIMIT 1', [key],\n                                 function(t, results) {\n                        var result = results.rows.length ?\n                                     results.rows.item(0).value : null;\n\n                        // Check to see if this is serialized content we need to\n                        // unpack.\n                        if (result) {\n                            result = serializer.deserialize(result);\n                        }\n\n                        resolve(result);\n                    }, function(t, error) {\n\n                        reject(error);\n                    });\n                });\n            }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    function iterate(iterator, callback) {\n        var self = this;\n\n        var promise = new Promise(function(resolve, reject) {\n            self.ready().then(function() {\n                var dbInfo = self._dbInfo;\n\n                dbInfo.db.transaction(function(t) {\n                    t.executeSql('SELECT * FROM ' + dbInfo.storeName, [],\n                        function(t, results) {\n                            var rows = results.rows;\n                            var length = rows.length;\n\n                            for (var i = 0; i < length; i++) {\n                                var item = rows.item(i);\n                                var result = item.value;\n\n                                // Check to see if this is serialized content\n                                // we need to unpack.\n                                if (result) {\n                                    result = serializer.deserialize(result);\n                                }\n\n                                result = iterator(result, item.key, i + 1);\n\n                                // void(0) prevents problems with redefinition\n                                // of `undefined`.\n                                if (result !== void(0)) {\n                                    resolve(result);\n                                    return;\n                                }\n                            }\n\n                            resolve();\n                        }, function(t, error) {\n                            reject(error);\n                        });\n                });\n            }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    function setItem(key, value, callback) {\n        var self = this;\n\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n            window.console.warn(key +\n                                ' used as a key, but it is not a string.');\n            key = String(key);\n        }\n\n        var promise = new Promise(function(resolve, reject) {\n            self.ready().then(function() {\n                // The localStorage API doesn't return undefined values in an\n                // \"expected\" way, so undefined is always cast to null in all\n                // drivers. See: https://github.com/mozilla/localForage/pull/42\n                if (value === undefined) {\n                    value = null;\n                }\n\n                // Save the original value to pass to the callback.\n                var originalValue = value;\n\n                serializer.serialize(value, function(value, error) {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        var dbInfo = self._dbInfo;\n                        dbInfo.db.transaction(function(t) {\n                            t.executeSql('INSERT OR REPLACE INTO ' +\n                                         dbInfo.storeName +\n                                         ' (key, value) VALUES (?, ?)',\n                                         [key, value], function() {\n                                resolve(originalValue);\n                            }, function(t, error) {\n                                reject(error);\n                            });\n                        }, function(sqlError) {\n                            // The transaction failed; check\n                            // to see if it's a quota error.\n                            if (sqlError.code === sqlError.QUOTA_ERR) {\n                                // We reject the callback outright for now, but\n                                // it's worth trying to re-run the transaction.\n                                // Even if the user accepts the prompt to use\n                                // more storage on Safari, this error will\n                                // be called.\n                                //\n                                // TODO: Try to re-run the transaction.\n                                reject(sqlError);\n                            }\n                        });\n                    }\n                });\n            }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    function removeItem(key, callback) {\n        var self = this;\n\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n            window.console.warn(key +\n                                ' used as a key, but it is not a string.');\n            key = String(key);\n        }\n\n        var promise = new Promise(function(resolve, reject) {\n            self.ready().then(function() {\n                var dbInfo = self._dbInfo;\n                dbInfo.db.transaction(function(t) {\n                    t.executeSql('DELETE FROM ' + dbInfo.storeName +\n                                 ' WHERE key = ?', [key],\n                                 function() {\n                        resolve();\n                    }, function(t, error) {\n\n                        reject(error);\n                    });\n                });\n            }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    // Deletes every item in the table.\n    // TODO: Find out if this resets the AUTO_INCREMENT number.\n    function clear(callback) {\n        var self = this;\n\n        var promise = new Promise(function(resolve, reject) {\n            self.ready().then(function() {\n                var dbInfo = self._dbInfo;\n                dbInfo.db.transaction(function(t) {\n                    t.executeSql('DELETE FROM ' + dbInfo.storeName, [],\n                                 function() {\n                        resolve();\n                    }, function(t, error) {\n                        reject(error);\n                    });\n                });\n            }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    // Does a simple `COUNT(key)` to get the number of items stored in\n    // localForage.\n    function length(callback) {\n        var self = this;\n\n        var promise = new Promise(function(resolve, reject) {\n            self.ready().then(function() {\n                var dbInfo = self._dbInfo;\n                dbInfo.db.transaction(function(t) {\n                    // Ahhh, SQL makes this one soooooo easy.\n                    t.executeSql('SELECT COUNT(key) as c FROM ' +\n                                 dbInfo.storeName, [], function(t, results) {\n                        var result = results.rows.item(0).c;\n\n                        resolve(result);\n                    }, function(t, error) {\n\n                        reject(error);\n                    });\n                });\n            }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    // Return the key located at key index X; essentially gets the key from a\n    // `WHERE id = ?`. This is the most efficient way I can think to implement\n    // this rarely-used (in my experience) part of the API, but it can seem\n    // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n    // the ID of each key will change every time it's updated. Perhaps a stored\n    // procedure for the `setItem()` SQL would solve this problem?\n    // TODO: Don't change ID on `setItem()`.\n    function key(n, callback) {\n        var self = this;\n\n        var promise = new Promise(function(resolve, reject) {\n            self.ready().then(function() {\n                var dbInfo = self._dbInfo;\n                dbInfo.db.transaction(function(t) {\n                    t.executeSql('SELECT key FROM ' + dbInfo.storeName +\n                                 ' WHERE id = ? LIMIT 1', [n + 1],\n                                 function(t, results) {\n                        var result = results.rows.length ?\n                                     results.rows.item(0).key : null;\n                        resolve(result);\n                    }, function(t, error) {\n                        reject(error);\n                    });\n                });\n            }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    function keys(callback) {\n        var self = this;\n\n        var promise = new Promise(function(resolve, reject) {\n            self.ready().then(function() {\n                var dbInfo = self._dbInfo;\n                dbInfo.db.transaction(function(t) {\n                    t.executeSql('SELECT key FROM ' + dbInfo.storeName, [],\n                                 function(t, results) {\n                        var keys = [];\n\n                        for (var i = 0; i < results.rows.length; i++) {\n                            keys.push(results.rows.item(i).key);\n                        }\n\n                        resolve(keys);\n                    }, function(t, error) {\n\n                        reject(error);\n                    });\n                });\n            }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    function executeCallback(promise, callback) {\n        if (callback) {\n            promise.then(function(result) {\n                callback(null, result);\n            }, function(error) {\n                callback(error);\n            });\n        }\n    }\n\n    var webSQLStorage = {\n        _driver: 'webSQLStorage',\n        _initStorage: _initStorage,\n        iterate: iterate,\n        getItem: getItem,\n        setItem: setItem,\n        removeItem: removeItem,\n        clear: clear,\n        length: length,\n        key: key,\n        keys: keys\n    };\n\n    if (moduleType === ModuleType.DEFINE) {\n        define('webSQLStorage', function() {\n            return webSQLStorage;\n        });\n    } else if (moduleType === ModuleType.EXPORT) {\n        module.exports = webSQLStorage;\n    } else {\n        this.webSQLStorage = webSQLStorage;\n    }\n}).call(window);\n"]}