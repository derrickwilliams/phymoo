{"version":3,"sources":["/Users/derwilliams/workspace/me/projects/phymoo/www/lib/localforage/src/drivers/localstorage.js"],"names":[],"mappings":"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","file":"localstorage-compiled.js","sourcesContent":["// If IndexedDB isn't available, we'll fall back to localStorage.\n// Note that this will have considerable performance and storage\n// side-effects (all data will be serialized on save and only data that\n// can be converted to a string via `JSON.stringify()` will be saved).\n(function() {\n    'use strict';\n\n    // Promises!\n    var Promise = (typeof module !== 'undefined' && module.exports && typeof require !== 'undefined') ?\n                  require('promise') : this.Promise;\n\n    var globalObject = this;\n    var serializer = null;\n    var localStorage = null;\n\n    // If the app is running inside a Google Chrome packaged webapp, or some\n    // other context where localStorage isn't available, we don't use\n    // localStorage. This feature detection is preferred over the old\n    // `if (window.chrome && window.chrome.runtime)` code.\n    // See: https://github.com/mozilla/localForage/issues/68\n    try {\n        // If localStorage isn't available, we get outta here!\n        // This should be inside a try catch\n        if (!this.localStorage || !('setItem' in this.localStorage)) {\n            return;\n        }\n        // Initialize localStorage and create a variable to use throughout\n        // the code.\n        localStorage = this.localStorage;\n    } catch (e) {\n        return;\n    }\n\n    var ModuleType = {\n        DEFINE: 1,\n        EXPORT: 2,\n        WINDOW: 3\n    };\n\n    // Attaching to window (i.e. no module loader) is the assumed,\n    // simple default.\n    var moduleType = ModuleType.WINDOW;\n\n    // Find out what kind of module setup we have; if none, we'll just attach\n    // localForage to the main window.\n    if (typeof module !== 'undefined' && module.exports && typeof require !== 'undefined') {\n        moduleType = ModuleType.EXPORT;\n    } else if (typeof define === 'function' && define.amd) {\n        moduleType = ModuleType.DEFINE;\n    }\n\n    // Config the localStorage backend, using options set in the config.\n    function _initStorage(options) {\n        var self = this;\n        var dbInfo = {};\n        if (options) {\n            for (var i in options) {\n                dbInfo[i] = options[i];\n            }\n        }\n\n        dbInfo.keyPrefix = dbInfo.name + '/';\n\n        self._dbInfo = dbInfo;\n\n        var serializerPromise = new Promise(function(resolve/*, reject*/) {\n            // We allow localForage to be declared as a module or as a\n            // library available without AMD/require.js.\n            if (moduleType === ModuleType.DEFINE) {\n                require(['localforageSerializer'], resolve);\n            } else if (moduleType === ModuleType.EXPORT) {\n                // Making it browserify friendly\n                resolve(require('./../utils/serializer'));\n            } else {\n                resolve(globalObject.localforageSerializer);\n            }\n        });\n\n        return serializerPromise.then(function(lib) {\n            serializer = lib;\n            return Promise.resolve();\n        });\n    }\n\n    // Remove all keys from the datastore, effectively destroying all data in\n    // the app's key/value store!\n    function clear(callback) {\n        var self = this;\n        var promise = self.ready().then(function() {\n            var keyPrefix = self._dbInfo.keyPrefix;\n\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    // Retrieve an item from the store. Unlike the original async_storage\n    // library in Gaia, we don't modify return values at all. If a key's value\n    // is `undefined`, we pass that value to the callback function.\n    function getItem(key, callback) {\n        var self = this;\n\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n            window.console.warn(key +\n                                ' used as a key, but it is not a string.');\n            key = String(key);\n        }\n\n        var promise = self.ready().then(function() {\n            var dbInfo = self._dbInfo;\n            var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the key\n            // is likely undefined and we'll pass it straight to the\n            // callback.\n            if (result) {\n                result = serializer.deserialize(result);\n            }\n\n            return result;\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    // Iterate over all items in the store.\n    function iterate(iterator, callback) {\n        var self = this;\n\n        var promise = self.ready().then(function() {\n            var keyPrefix = self._dbInfo.keyPrefix;\n            var keyPrefixLength = keyPrefix.length;\n            var length = localStorage.length;\n\n            for (var i = 0; i < length; i++) {\n                var key = localStorage.key(i);\n                var value = localStorage.getItem(key);\n\n                // If a result was found, parse it from the serialized\n                // string into a JS object. If result isn't truthy, the\n                // key is likely undefined and we'll pass it straight\n                // to the iterator.\n                if (value) {\n                    value = serializer.deserialize(value);\n                }\n\n                value = iterator(value, key.substring(keyPrefixLength), i + 1);\n\n                if (value !== void(0)) {\n                    return value;\n                }\n            }\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    // Same as localStorage's key() method, except takes a callback.\n    function key(n, callback) {\n        var self = this;\n        var promise = self.ready().then(function() {\n            var dbInfo = self._dbInfo;\n            var result;\n            try {\n                result = localStorage.key(n);\n            } catch (error) {\n                result = null;\n            }\n\n            // Remove the prefix from the key, if a key is found.\n            if (result) {\n                result = result.substring(dbInfo.keyPrefix.length);\n            }\n\n            return result;\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    function keys(callback) {\n        var self = this;\n        var promise = self.ready().then(function() {\n            var dbInfo = self._dbInfo;\n            var length = localStorage.length;\n            var keys = [];\n\n            for (var i = 0; i < length; i++) {\n                if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                    keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n                }\n            }\n\n            return keys;\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    // Supply the number of keys in the datastore to the callback function.\n    function length(callback) {\n        var self = this;\n        var promise = self.keys().then(function(keys) {\n            return keys.length;\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    // Remove an item from the store, nice and simple.\n    function removeItem(key, callback) {\n        var self = this;\n\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n            window.console.warn(key +\n                                ' used as a key, but it is not a string.');\n            key = String(key);\n        }\n\n        var promise = self.ready().then(function() {\n            var dbInfo = self._dbInfo;\n            localStorage.removeItem(dbInfo.keyPrefix + key);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    // Set a key's value and run an optional callback once the value is set.\n    // Unlike Gaia's implementation, the callback function is passed the value,\n    // in case you want to operate on that value only after you're sure it\n    // saved, or something like that.\n    function setItem(key, value, callback) {\n        var self = this;\n\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n            window.console.warn(key +\n                                ' used as a key, but it is not a string.');\n            key = String(key);\n        }\n\n        var promise = self.ready().then(function() {\n            // Convert undefined values to null.\n            // https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            return new Promise(function(resolve, reject) {\n                serializer.serialize(value, function(value, error) {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        try {\n                            var dbInfo = self._dbInfo;\n                            localStorage.setItem(dbInfo.keyPrefix + key, value);\n                            resolve(originalValue);\n                        } catch (e) {\n                            // localStorage capacity exceeded.\n                            // TODO: Make this a specific error/event.\n                            if (e.name === 'QuotaExceededError' ||\n                                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                                reject(e);\n                            }\n                            reject(e);\n                        }\n                    }\n                });\n            });\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n    }\n\n    function executeCallback(promise, callback) {\n        if (callback) {\n            promise.then(function(result) {\n                callback(null, result);\n            }, function(error) {\n                callback(error);\n            });\n        }\n    }\n\n    var localStorageWrapper = {\n        _driver: 'localStorageWrapper',\n        _initStorage: _initStorage,\n        // Default API, from Gaia/localStorage.\n        iterate: iterate,\n        getItem: getItem,\n        setItem: setItem,\n        removeItem: removeItem,\n        clear: clear,\n        length: length,\n        key: key,\n        keys: keys\n    };\n\n    if (moduleType === ModuleType.EXPORT) {\n        module.exports = localStorageWrapper;\n    } else if (moduleType === ModuleType.DEFINE) {\n        define('localStorageWrapper', function() {\n            return localStorageWrapper;\n        });\n    } else {\n        this.localStorageWrapper = localStorageWrapper;\n    }\n}).call(window);\n"]}