{"version":3,"sources":["/Users/derwilliams/workspace/me/projects/phymoo/www/lib/localforage/src/localforage.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACR,gBAAY,CAAC;;;AAGb,QAAI,OAAO,GAAG,AAAC,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,OAAO,IAAI,OAAO,OAAO,KAAK,WAAW,GAClF,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;;;;AAIhD,QAAI,aAAa,GAAG,EAAE,CAAC;;AAEvB,QAAI,UAAU,GAAG;AACb,iBAAS,EAAE,cAAc;AACzB,oBAAY,EAAE,qBAAqB;AACnC,cAAM,EAAE,eAAe;KAC1B,CAAC;;AAEF,QAAI,kBAAkB,GAAG,CACrB,UAAU,CAAC,SAAS,EACpB,UAAU,CAAC,MAAM,EACjB,UAAU,CAAC,YAAY,CAC1B,CAAC;;AAEF,QAAI,cAAc,GAAG,CACjB,OAAO,EACP,SAAS,EACT,SAAS,EACT,KAAK,EACL,MAAM,EACN,QAAQ,EACR,YAAY,EACZ,SAAS,CACZ,CAAC;;AAEF,QAAI,UAAU,GAAG;AACb,cAAM,EAAE,CAAC;AACT,cAAM,EAAE,CAAC;AACT,cAAM,EAAE,CAAC;KACZ,CAAC;;AAEF,QAAI,aAAa,GAAG;AAChB,mBAAW,EAAE,EAAE;AACf,cAAM,EAAE,kBAAkB,CAAC,KAAK,EAAE;AAClC,YAAI,EAAE,aAAa;;;AAGnB,YAAI,EAAE,OAAO;AACb,iBAAS,EAAE,eAAe;AAC1B,eAAO,EAAE,CAAG;KACf,CAAC;;;;AAIF,QAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;;;;AAInC,QAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,OAAO,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;AACnF,kBAAU,GAAG,UAAU,CAAC,MAAM,CAAC;KAClC,MAAM,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACnD,kBAAU,GAAG,UAAU,CAAC,MAAM,CAAC;KAClC;;;;;;;AAOD,QAAI,aAAa,GAAG,CAAC,UAAS,IAAI,EAAE;;;AAGhC,YAAI,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,eAAe,IACnD,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,IACpC,IAAI,CAAC,WAAW,CAAC;;AAEjC,YAAI,MAAM,GAAG,EAAE,CAAC;;AAEhB,cAAM,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;AAChD,cAAM,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,YAAW;;;;;;;;;;AAUzC,gBAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,IAAI,IAAI,CAAC,SAAS,IAC1D,IAAI,CAAC,SAAS,CAAC,SAAS,IACxB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IACvC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;AAC1C,uBAAO,KAAK,CAAC;aAChB;AACD,gBAAI;AACA,uBAAO,SAAS,IACT,OAAO,SAAS,CAAC,IAAI,KAAK,UAAU;;;;;AAKpC,uBAAO,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC;aAClD,CAAC,OAAO,CAAC,EAAE;AACR,uBAAO,KAAK,CAAC;aAChB;SACJ,CAAA,EAAG,CAAC;;AAEL,cAAM,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,YAAW;AAC5C,gBAAI;AACA,uBAAQ,IAAI,CAAC,YAAY,IAChB,SAAS,IAAI,IAAI,CAAC,YAAY,AAAC,IAC/B,IAAI,CAAC,YAAY,CAAC,OAAO,AAAC,CAAE;aACxC,CAAC,OAAO,CAAC,EAAE;AACR,uBAAO,KAAK,CAAC;aAChB;SACJ,CAAA,EAAG,CAAC;;AAEL,eAAO,MAAM,CAAC;KACjB,CAAA,CAAE,IAAI,CAAC,CAAC;;AAET,QAAI,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,UAAS,GAAG,EAAE;AACzC,eAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,gBAAgB,CAAC;KACnE,CAAC;;AAEF,aAAS,aAAa,CAAC,mBAAmB,EAAE,aAAa,EAAE;AACvD,2BAAmB,CAAC,aAAa,CAAC,GAAG,YAAW;AAC5C,gBAAI,KAAK,GAAG,SAAS,CAAC;AACtB,mBAAO,mBAAmB,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,YAAW;AAC/C,uBAAO,mBAAmB,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;aAC/E,CAAC,CAAC;SACN,CAAC;KACL;;AAED,aAAS,MAAM,GAAG;AACd,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,gBAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;AAEvB,gBAAI,GAAG,EAAE;AACL,qBAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AACjB,wBAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AACzB,4BAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AACnB,qCAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;yBACxC,MAAM;AACH,qCAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;yBAChC;qBACJ;iBACJ;aACJ;SACJ;;AAED,eAAO,SAAS,CAAC,CAAC,CAAC,CAAC;KACvB;;AAED,aAAS,eAAe,CAAC,UAAU,EAAE;AACjC,aAAK,IAAI,MAAM,IAAI,UAAU,EAAE;AAC3B,gBAAI,UAAU,CAAC,cAAc,CAAC,MAAM,CAAC,IACjC,UAAU,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;AACnC,uBAAO,IAAI,CAAC;aACf;SACJ;;AAED,eAAO,KAAK,CAAC;KAChB;;AAED,QAAI,YAAY,GAAG,IAAI,CAAC;;AAExB,aAAS,WAAW,CAAC,OAAO,EAAE;AAC1B,YAAI,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;AAClD,YAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,YAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;;;;;AAMpB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,yBAAa,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C;;AAED,YAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KACvC;;AAED,eAAW,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;AACvD,eAAW,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;AAC7D,eAAW,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;;;;;;AAMjD,eAAW,CAAC,SAAS,CAAC,MAAM,GAAG,UAAS,OAAO,EAAE;;;;AAI7C,YAAI,OAAO,OAAO,AAAC,KAAK,QAAQ,EAAE;;;AAG9B,gBAAI,IAAI,CAAC,MAAM,EAAE;AACb,uBAAO,IAAI,KAAK,CAAC,wCAAwC,GACxC,gBAAgB,CAAC,CAAC;aACtC;;AAED,iBAAK,IAAI,CAAC,IAAI,OAAO,EAAE;AACnB,oBAAI,CAAC,KAAK,WAAW,EAAE;AACnB,2BAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;iBAC/C;;AAED,oBAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aAChC;;;;AAID,gBAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;AACvC,oBAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACvC;;AAED,mBAAO,IAAI,CAAC;SACf,MAAM,IAAI,OAAO,OAAO,AAAC,KAAK,QAAQ,EAAE;AACrC,mBAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAChC,MAAM;AACH,mBAAO,IAAI,CAAC,OAAO,CAAC;SACvB;KACJ,CAAC;;;;AAIF,eAAW,CAAC,SAAS,CAAC,YAAY,GAAG,UAAS,YAAY,EAAE,QAAQ,EACtB,aAAa,EAAE;AACzD,YAAI,YAAY,GAAG,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACrD,gBAAI;AACA,oBAAI,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC;AACtC,oBAAI,eAAe,GAAG,IAAI,KAAK,CAC3B,mCAAmC,GACnC,qDAAqD,CACxD,CAAC;AACF,oBAAI,WAAW,GAAG,IAAI,KAAK,CACvB,qCAAqC,GAAG,YAAY,CAAC,OAAO,CAC/D,CAAC;;;;AAIF,oBAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AACvB,0BAAM,CAAC,eAAe,CAAC,CAAC;AACxB,2BAAO;iBACV;AACD,oBAAI,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;AACvC,0BAAM,CAAC,WAAW,CAAC,CAAC;AACpB,2BAAO;iBACV;;AAED,oBAAI,mBAAmB,GAAG,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AAChE,qBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,wBAAI,kBAAkB,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAChD,wBAAI,CAAC,kBAAkB,IACnB,CAAC,YAAY,CAAC,kBAAkB,CAAC,IACjC,OAAO,YAAY,CAAC,kBAAkB,CAAC,KAAK,UAAU,EAAE;AACxD,8BAAM,CAAC,eAAe,CAAC,CAAC;AACxB,+BAAO;qBACV;iBACJ;;AAED,oBAAI,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3C,oBAAI,UAAU,IAAK,YAAY,EAAE;AAC7B,wBAAI,YAAY,CAAC,QAAQ,IAAI,OAAO,YAAY,CAAC,QAAQ,KAAK,UAAU,EAAE;AACtE,sCAAc,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;qBAC5C,MAAM;AACH,sCAAc,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;qBAC7D;iBACJ;;AAED,8BAAc,CAAC,IAAI,CAAC,UAAS,aAAa,EAAE;AACxC,iCAAa,CAAC,UAAU,CAAC,GAAG,aAAa,CAAC;AAC1C,iCAAa,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC;AACzC,2BAAO,EAAE,CAAC;iBACb,EAAE,MAAM,CAAC,CAAC;aACd,CAAC,OAAO,CAAC,EAAE;AACR,sBAAM,CAAC,CAAC,CAAC,CAAC;aACb;SACJ,CAAC,CAAC;;AAEH,oBAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;AAC3C,eAAO,YAAY,CAAC;KACvB,CAAC;;AAEF,eAAW,CAAC,SAAS,CAAC,MAAM,GAAG,YAAW;AACtC,eAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;KAC/B,CAAC;;AAEF,eAAW,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,QAAQ,EAAE;AAC7C,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,YAAI,KAAK,GAAG,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AAC9C,gBAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAW;AAC5B,oBAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;AACtB,wBAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACjD;;AAED,oBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;aACrC,CAAC,SAAM,CAAC,MAAM,CAAC,CAAC;SACpB,CAAC,CAAC;;AAEH,aAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC/B,eAAO,KAAK,CAAC;KAChB,CAAC;;AAEF,eAAW,CAAC,SAAS,CAAC,SAAS,GAAG,UAAS,OAAO,EAAE,QAAQ,EACjB,aAAa,EAAE;AACtD,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,YAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC7B,mBAAO,GAAG,CAAC,OAAO,CAAC,CAAC;SACvB;;AAED,YAAI,CAAC,UAAU,GAAG,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACpD,gBAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;AACxD,gBAAI,KAAK,GAAG,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;;AAE5D,gBAAI,CAAC,UAAU,EAAE;AACb,oBAAI,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACxC,sBAAM,CAAC,KAAK,CAAC,CAAC;AACd,uBAAO;aACV;;AAED,gBAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,gBAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;AAEnB,gBAAI,eAAe,CAAC,UAAU,CAAC,EAAE;AAC7B,oBAAI,aAAa,GAAG,IAAI,OAAO,CAAC,UAAS,OAAO,eAAc;;;AAG1D,wBAAI,UAAU,KAAK,UAAU,CAAC,MAAM,EAAE;AAClC,+BAAO,CAAC,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,CAAC;qBAClC,MAAM,IAAI,UAAU,KAAK,UAAU,CAAC,MAAM,EAAE;;AAEzC,gCAAQ,UAAU;AACd,iCAAK,IAAI,CAAC,SAAS;AACf,uCAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;AACxC,sCAAM;AAAA,AACV,iCAAK,IAAI,CAAC,YAAY;AAClB,uCAAO,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;AAC3C,sCAAM;AAAA,AACV,iCAAK,IAAI,CAAC,MAAM;AACZ,uCAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;AACrC,sCAAM;AAAA,yBACb;qBACJ,MAAM;AACH,+BAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;qBACrC;iBACJ,CAAC,CAAC;AACH,6BAAa,CAAC,IAAI,CAAC,UAAS,MAAM,EAAE;AAChC,wBAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrB,2BAAO,EAAE,CAAC;iBACb,CAAC,CAAC;aACN,MAAM,IAAI,aAAa,CAAC,UAAU,CAAC,EAAE;AAClC,oBAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;AACxC,uBAAO,EAAE,CAAC;aACb,MAAM;AACH,oBAAI,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACxC,sBAAM,CAAC,KAAK,CAAC,CAAC;aACjB;SACJ,CAAC,CAAC;;AAEH,iBAAS,iBAAiB,GAAG;AACzB,gBAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;SACvC;AACD,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;;AAE3D,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;AAC9C,eAAO,IAAI,CAAC,UAAU,CAAC;KAC1B,CAAC;;AAEF,eAAW,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAS,UAAU,EAAE;AAClD,eAAO,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;KACtC,CAAC;;AAEF,eAAW,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,2BAA2B,EAAE;AAClE,cAAM,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;KAC7C,CAAC;;;;AAIF,eAAW,CAAC,SAAS,CAAC,wBAAwB,GAAG,UAAS,OAAO,EAAE;AAC/D,YAAI,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AAC7B,iBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,oBAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;AAExB,oBAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACvB,2BAAO,MAAM,CAAC;iBACjB;aACJ;SACJ;;AAED,eAAO,IAAI,CAAC;KACf,CAAC;;AAEF,eAAW,CAAC,SAAS,CAAC,cAAc,GAAG,UAAS,OAAO,EAAE;AACrD,eAAO,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;KACnC,CAAC;;;;AAIF,QAAI,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;;;;AAIpC,QAAI,UAAU,KAAK,UAAU,CAAC,MAAM,EAAE;AAClC,cAAM,CAAC,aAAa,EAAE,YAAW;AAC7B,mBAAO,WAAW,CAAC;SACtB,CAAC,CAAC;KACN,MAAM,IAAI,UAAU,KAAK,UAAU,CAAC,MAAM,EAAE;AACzC,cAAM,CAAC,OAAO,GAAG,WAAW,CAAC;KAChC,MAAM;AACH,YAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAClC;CACJ,CAAA,CAAE,IAAI,CAAC,MAAM,CAAC,CAAC","file":"localforage-compiled.js","sourcesContent":["(function() {\n    'use strict';\n\n    // Promises!\n    var Promise = (typeof module !== 'undefined' && module.exports && typeof require !== 'undefined') ?\n                  require('promise') : this.Promise;\n\n    // Custom drivers are stored here when `defineDriver()` is called.\n    // They are shared across all instances of localForage.\n    var CustomDrivers = {};\n\n    var DriverType = {\n        INDEXEDDB: 'asyncStorage',\n        LOCALSTORAGE: 'localStorageWrapper',\n        WEBSQL: 'webSQLStorage'\n    };\n\n    var DefaultDriverOrder = [\n        DriverType.INDEXEDDB,\n        DriverType.WEBSQL,\n        DriverType.LOCALSTORAGE\n    ];\n\n    var LibraryMethods = [\n        'clear',\n        'getItem',\n        'iterate',\n        'key',\n        'keys',\n        'length',\n        'removeItem',\n        'setItem'\n    ];\n\n    var ModuleType = {\n        DEFINE: 1,\n        EXPORT: 2,\n        WINDOW: 3\n    };\n\n    var DefaultConfig = {\n        description: '',\n        driver: DefaultDriverOrder.slice(),\n        name: 'localforage',\n        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n        // we can use without a prompt.\n        size: 4980736,\n        storeName: 'keyvaluepairs',\n        version: 1.0\n    };\n\n    // Attaching to window (i.e. no module loader) is the assumed,\n    // simple default.\n    var moduleType = ModuleType.WINDOW;\n\n    // Find out what kind of module setup we have; if none, we'll just attach\n    // localForage to the main window.\n    if (typeof module !== 'undefined' && module.exports && typeof require !== 'undefined') {\n        moduleType = ModuleType.EXPORT;\n    } else if (typeof define === 'function' && define.amd) {\n        moduleType = ModuleType.DEFINE;\n    }\n\n    // Check to see if IndexedDB is available and if it is the latest\n    // implementation; it's our preferred backend library. We use \"_spec_test\"\n    // as the name of the database because it's not the one we'll operate on,\n    // but it's useful to make sure its using the right spec.\n    // See: https://github.com/mozilla/localForage/issues/128\n    var driverSupport = (function(self) {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        var indexedDB = indexedDB || self.indexedDB || self.webkitIndexedDB ||\n                        self.mozIndexedDB || self.OIndexedDB ||\n                        self.msIndexedDB;\n\n        var result = {};\n\n        result[DriverType.WEBSQL] = !!self.openDatabase;\n        result[DriverType.INDEXEDDB] = !!(function() {\n            // We mimic PouchDB here; just UA test for Safari (which, as of\n            // iOS 8/Yosemite, doesn't properly support IndexedDB).\n            // IndexedDB support is broken and different from Blink's.\n            // This is faster than the test case (and it's sync), so we just\n            // do this. *SIGH*\n            // http://bl.ocks.org/nolanlawson/raw/c83e9039edf2278047e9/\n            //\n            // We test for openDatabase because IE Mobile identifies itself\n            // as Safari. Oh the lulz...\n            if (typeof self.openDatabase !== 'undefined' && self.navigator &&\n                self.navigator.userAgent &&\n                /Safari/.test(self.navigator.userAgent) &&\n                !/Chrome/.test(self.navigator.userAgent)) {\n                return false;\n            }\n            try {\n                return indexedDB &&\n                       typeof indexedDB.open === 'function' &&\n                       // Some Samsung/HTC Android 4.0-4.3 devices\n                       // have older IndexedDB specs; if this isn't available\n                       // their IndexedDB is too old for us to use.\n                       // (Replaces the onupgradeneeded test.)\n                       typeof self.IDBKeyRange !== 'undefined';\n            } catch (e) {\n                return false;\n            }\n        })();\n\n        result[DriverType.LOCALSTORAGE] = !!(function() {\n            try {\n                return (self.localStorage &&\n                        ('setItem' in self.localStorage) &&\n                        (self.localStorage.setItem));\n            } catch (e) {\n                return false;\n            }\n        })();\n\n        return result;\n    })(this);\n\n    var isArray = Array.isArray || function(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n\n    function callWhenReady(localForageInstance, libraryMethod) {\n        localForageInstance[libraryMethod] = function() {\n            var _args = arguments;\n            return localForageInstance.ready().then(function() {\n                return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n            });\n        };\n    }\n\n    function extend() {\n        for (var i = 1; i < arguments.length; i++) {\n            var arg = arguments[i];\n\n            if (arg) {\n                for (var key in arg) {\n                    if (arg.hasOwnProperty(key)) {\n                        if (isArray(arg[key])) {\n                            arguments[0][key] = arg[key].slice();\n                        } else {\n                            arguments[0][key] = arg[key];\n                        }\n                    }\n                }\n            }\n        }\n\n        return arguments[0];\n    }\n\n    function isLibraryDriver(driverName) {\n        for (var driver in DriverType) {\n            if (DriverType.hasOwnProperty(driver) &&\n                DriverType[driver] === driverName) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    var globalObject = this;\n\n    function LocalForage(options) {\n        this._config = extend({}, DefaultConfig, options);\n        this._driverSet = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n\n        this.setDriver(this._config.driver);\n    }\n\n    LocalForage.prototype.INDEXEDDB = DriverType.INDEXEDDB;\n    LocalForage.prototype.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n    LocalForage.prototype.WEBSQL = DriverType.WEBSQL;\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n    LocalForage.prototype.config = function(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if (typeof(options) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" +\n                                 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof(options) === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n    LocalForage.prototype.defineDriver = function(driverObject, callback,\n                                                  errorCallback) {\n        var defineDriver = new Promise(function(resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error(\n                    'Custom driver not compliant; see ' +\n                    'https://mozilla.github.io/localForage/#definedriver'\n                );\n                var namingError = new Error(\n                    'Custom driver name already in use: ' + driverObject._driver\n                );\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod ||\n                        !driverObject[customDriverMethod] ||\n                        typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise.resolve(true);\n                if ('_support'  in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function(supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        defineDriver.then(callback, errorCallback);\n        return defineDriver;\n    };\n\n    LocalForage.prototype.driver = function() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.ready = function(callback) {\n        var self = this;\n\n        var ready = new Promise(function(resolve, reject) {\n            self._driverSet.then(function() {\n                if (self._ready === null) {\n                    self._ready = self._initStorage(self._config);\n                }\n\n                self._ready.then(resolve, reject);\n            }).catch(reject);\n        });\n\n        ready.then(callback, callback);\n        return ready;\n    };\n\n    LocalForage.prototype.setDriver = function(drivers, callback,\n                                               errorCallback) {\n        var self = this;\n\n        if (typeof drivers === 'string') {\n            drivers = [drivers];\n        }\n\n        this._driverSet = new Promise(function(resolve, reject) {\n            var driverName = self._getFirstSupportedDriver(drivers);\n            var error = new Error('No available storage method found.');\n\n            if (!driverName) {\n                self._driverSet = Promise.reject(error);\n                reject(error);\n                return;\n            }\n\n            self._dbInfo = null;\n            self._ready = null;\n\n            if (isLibraryDriver(driverName)) {\n                var driverPromise = new Promise(function(resolve/*, reject*/) {\n                    // We allow localForage to be declared as a module or as a\n                    // library available without AMD/require.js.\n                    if (moduleType === ModuleType.DEFINE) {\n                        require([driverName], resolve);\n                    } else if (moduleType === ModuleType.EXPORT) {\n                        // Making it browserify friendly\n                        switch (driverName) {\n                            case self.INDEXEDDB:\n                                resolve(require('./drivers/indexeddb'));\n                                break;\n                            case self.LOCALSTORAGE:\n                                resolve(require('./drivers/localstorage'));\n                                break;\n                            case self.WEBSQL:\n                                resolve(require('./drivers/websql'));\n                                break;\n                        }\n                    } else {\n                        resolve(globalObject[driverName]);\n                    }\n                });\n                driverPromise.then(function(driver) {\n                    self._extend(driver);\n                    resolve();\n                });\n            } else if (CustomDrivers[driverName]) {\n                self._extend(CustomDrivers[driverName]);\n                resolve();\n            } else {\n                self._driverSet = Promise.reject(error);\n                reject(error);\n            }\n        });\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n        this._driverSet.then(setDriverToConfig, setDriverToConfig);\n\n        this._driverSet.then(callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    // Used to determine which driver we should use as the backend for this\n    // instance of localForage.\n    LocalForage.prototype._getFirstSupportedDriver = function(drivers) {\n        if (drivers && isArray(drivers)) {\n            for (var i = 0; i < drivers.length; i++) {\n                var driver = drivers[i];\n\n                if (this.supports(driver)) {\n                    return driver;\n                }\n            }\n        }\n\n        return null;\n    };\n\n    LocalForage.prototype.createInstance = function(options) {\n        return new LocalForage(options);\n    };\n\n    // The actual localForage object that we expose as a module or via a\n    // global. It's extended by pulling in one of our other libraries.\n    var localForage = new LocalForage();\n\n    // We allow localForage to be declared as a module or as a library\n    // available without AMD/require.js.\n    if (moduleType === ModuleType.DEFINE) {\n        define('localforage', function() {\n            return localForage;\n        });\n    } else if (moduleType === ModuleType.EXPORT) {\n        module.exports = localForage;\n    } else {\n        this.localforage = localForage;\n    }\n}).call(window);\n"]}