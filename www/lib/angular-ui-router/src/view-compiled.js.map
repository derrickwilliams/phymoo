{"version":3,"sources":["/Users/derwilliams/workspace/me/projects/phymoo/www/lib/angular-ui-router/src/view.js"],"names":[],"mappings":";;AACA,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;AAC3B,SAAS,aAAa,GAAG;;AAEvB,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;;;;;;;;;;AAWjB,MAAI,CAAC,OAAO,GAAG,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;AAClD,WAAS,IAAI,CAAI,UAAU,EAAI,gBAAgB,EAAE;AAC/C,WAAO;;;;;;;;;;;;AAYL,UAAI,EAAE,SAAS,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE;AACjC,YAAI,MAAM;YAAE,QAAQ,GAAG;AACrB,kBAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;SAClG,CAAC;AACF,eAAO,GAAG,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;;AAEpC,YAAI,OAAO,CAAC,IAAI,EAAE;AAChB,gBAAM,GAAG,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;SACpF;AACD,YAAI,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;AAwB5B,oBAAU,CAAC,UAAU,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;SACvD;AACD,eAAO,MAAM,CAAC;OACf;KACF,CAAC;GACH;CACF;;AAED,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC","file":"view-compiled.js","sourcesContent":["\n$ViewProvider.$inject = [];\nfunction $ViewProvider() {\n\n  this.$get = $get;\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$view\n   *\n   * @requires ui.router.util.$templateFactory\n   * @requires $rootScope\n   *\n   * @description\n   *\n   */\n  $get.$inject = ['$rootScope', '$templateFactory'];\n  function $get(   $rootScope,   $templateFactory) {\n    return {\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n      /**\n       * @ngdoc function\n       * @name ui.router.state.$view#load\n       * @methodOf ui.router.state.$view\n       *\n       * @description\n       *\n       * @param {string} name name\n       * @param {object} options option object.\n       */\n      load: function load(name, options) {\n        var result, defaults = {\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n        };\n        options = extend(defaults, options);\n\n        if (options.view) {\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n        }\n        if (result && options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$viewContentLoading\n         * @eventOf ui.router.state.$view\n         * @eventType broadcast on root scope\n         * @description\n         *\n         * Fired once the view **begins loading**, *before* the DOM is rendered.\n         *\n         * @param {Object} event Event object.\n         * @param {Object} viewConfig The view config properties (template, controller, etc).\n         *\n         * @example\n         *\n         * <pre>\n         * $scope.$on('$viewContentLoading',\n         * function(event, viewConfig){\n         *     // Access to all the view config properties.\n         *     // and one special property 'targetView'\n         *     // viewConfig.targetView\n         * });\n         * </pre>\n         */\n          $rootScope.$broadcast('$viewContentLoading', options);\n        }\n        return result;\n      }\n    };\n  }\n}\n\nangular.module('ui.router.state').provider('$view', $ViewProvider);\n"]}