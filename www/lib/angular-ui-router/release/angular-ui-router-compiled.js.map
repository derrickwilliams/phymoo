{"version":3,"sources":["/Users/derwilliams/workspace/me/projects/phymoo/www/lib/angular-ui-router/release/angular-ui-router.js"],"names":[],"mappings":"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","file":"angular-ui-router-compiled.js","sourcesContent":["/**\n * State-based routing for AngularJS\n * @version v0.2.13\n * @link http://angular-ui.github.com/\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'ui.router';\n}\n\n(function (window, angular, undefined) {\n/*jshint globalstrict:true*/\n/*global angular:false*/\n'use strict';\n\nvar isDefined = angular.isDefined,\n    isFunction = angular.isFunction,\n    isString = angular.isString,\n    isObject = angular.isObject,\n    isArray = angular.isArray,\n    forEach = angular.forEach,\n    extend = angular.extend,\n    copy = angular.copy;\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n}\n\nfunction merge(dst) {\n  forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      forEach(obj, function(value, key) {\n        if (!dst.hasOwnProperty(key)) dst[key] = value;\n      });\n    }\n  });\n  return dst;\n}\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n  var path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * IE8-safe wrapper for `Object.keys()`.\n *\n * @param {Object} object A JavaScript object.\n * @return {Array} Returns the keys of the object as an array.\n */\nfunction objectKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n  var result = [];\n\n  angular.forEach(object, function(val, key) {\n    result.push(key);\n  });\n  return result;\n}\n\n/**\n * IE8-safe wrapper for `Array.prototype.indexOf()`.\n *\n * @param {Array} array A JavaScript array.\n * @param {*} value A value to search the array for.\n * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n */\nfunction indexOf(array, value) {\n  if (Array.prototype.indexOf) {\n    return array.indexOf(value, Number(arguments[2]) || 0);\n  }\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in array && array[from] === value) return from;\n  }\n  return -1;\n}\n\n/**\n * Merges a set of parameters with all parameters inherited between the common parents of the\n * current state and a given destination state.\n *\n * @param {Object} currentParams The value of the current state parameters ($stateParams).\n * @param {Object} newParams The set of parameters which will be composited with inherited params.\n * @param {Object} $current Internal definition of object representing the current state.\n * @param {Object} $to Internal definition of object representing state to transition to.\n */\nfunction inheritParams(currentParams, newParams, $current, $to) {\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n  for (var i in parents) {\n    if (!parents[i].params) continue;\n    parentParams = objectKeys(parents[i].params);\n    if (!parentParams.length) continue;\n\n    for (var j in parentParams) {\n      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n      inheritList.push(parentParams[j]);\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\n    }\n  }\n  return extend({}, inherited, newParams);\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n  if (!keys) {\n    keys = [];\n    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n  }\n\n  for (var i=0; i<keys.length; i++) {\n    var k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\n/**\n * Returns the subset of an object, based on a list of keys.\n *\n * @param {Array} keys\n * @param {Object} values\n * @return {Boolean} Returns a subset of `values`.\n */\nfunction filterByKeys(keys, values) {\n  var filtered = {};\n\n  forEach(keys, function (name) {\n    filtered[name] = values[name];\n  });\n  return filtered;\n}\n\n// like _.indexBy\n// when you know that your index values will be unique, or you want last-one-in to win\nfunction indexBy(array, propName) {\n  var result = {};\n  forEach(array, function(item) {\n    result[item[propName]] = item;\n  });\n  return result;\n}\n\n// extracted from underscore.js\n// Return a copy of the object only containing the whitelisted properties.\nfunction pick(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  forEach(keys, function(key) {\n    if (key in obj) copy[key] = obj[key];\n  });\n  return copy;\n}\n\n// extracted from underscore.js\n// Return a copy of the object omitting the blacklisted properties.\nfunction omit(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  for (var key in obj) {\n    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n  }\n  return copy;\n}\n\nfunction pluck(collection, key) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = isFunction(key) ? key(val) : val[key];\n  });\n  return result;\n}\n\nfunction filter(collection, callback) {\n  var array = isArray(collection);\n  var result = array ? [] : {};\n  forEach(collection, function(val, i) {\n    if (callback(val, i)) {\n      result[array ? result.length : i] = val;\n    }\n  });\n  return result;\n}\n\nfunction map(collection, callback) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = callback(val, i);\n  });\n  return result;\n}\n\n/**\n * @ngdoc overview\n * @name ui.router.util\n *\n * @description\n * # ui.router.util sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.util', ['ng']);\n\n/**\n * @ngdoc overview\n * @name ui.router.router\n * \n * @requires ui.router.util\n *\n * @description\n * # ui.router.router sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n */\nangular.module('ui.router.router', ['ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router.state\n * \n * @requires ui.router.router\n * @requires ui.router.util\n *\n * @description\n * # ui.router.state sub-module\n *\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n * \n */\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router\n *\n * @requires ui.router.state\n *\n * @description\n * # ui.router\n * \n * ## The main module for ui.router \n * There are several sub-modules included with the ui.router module, however only this module is needed\n * as a dependency within your angular app. The other modules are for organization purposes. \n *\n * The modules are:\n * * ui.router - the main \"umbrella\" module\n * * ui.router.router - \n * \n * *You'll need to include **only** this module as the dependency within your angular app.*\n * \n * <pre>\n * <!doctype html>\n * <html ng-app=\"myApp\">\n * <head>\n *   <script src=\"js/angular.js\"></script>\n *   <!-- Include the ui-router script -->\n *   <script src=\"js/angular-ui-router.min.js\"></script>\n *   <script>\n *     // ...and add 'ui.router' as a dependency\n *     var myApp = angular.module('myApp', ['ui.router']);\n *   </script>\n * </head>\n * <body>\n * </body>\n * </html>\n * </pre>\n */\nangular.module('ui.router', ['ui.router.state']);\n\nangular.module('ui.router.compat', ['ui.router']);\n\n/**\n * @ngdoc object\n * @name ui.router.util.$resolve\n *\n * @requires $q\n * @requires $injector\n *\n * @description\n * Manages resolution of (acyclic) graphs of promises.\n */\n$Resolve.$inject = ['$q', '$injector'];\nfunction $Resolve(  $q,    $injector) {\n  \n  var VISIT_IN_PROGRESS = 1,\n      VISIT_DONE = 2,\n      NOTHING = {},\n      NO_DEPENDENCIES = [],\n      NO_LOCALS = NOTHING,\n      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n  \n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#study\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Studies a set of invocables that are likely to be used multiple times.\n   * <pre>\n   * $resolve.study(invocables)(locals, parent, self)\n   * </pre>\n   * is equivalent to\n   * <pre>\n   * $resolve.resolve(invocables, locals, parent, self)\n   * </pre>\n   * but the former is more efficient (in fact `resolve` just calls `study` \n   * internally).\n   *\n   * @param {object} invocables Invocable objects\n   * @return {function} a function to pass in locals, parent and self\n   */\n  this.study = function (invocables) {\n    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n    var invocableKeys = objectKeys(invocables || {});\n    \n    // Perform a topological sort of invocables to build an ordered plan\n    var plan = [], cycle = [], visited = {};\n    function visit(value, key) {\n      if (visited[key] === VISIT_DONE) return;\n      \n      cycle.push(key);\n      if (visited[key] === VISIT_IN_PROGRESS) {\n        cycle.splice(0, indexOf(cycle, key));\n        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n      }\n      visited[key] = VISIT_IN_PROGRESS;\n      \n      if (isString(value)) {\n        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n      } else {\n        var params = $injector.annotate(value);\n        forEach(params, function (param) {\n          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n        });\n        plan.push(key, value, params);\n      }\n      \n      cycle.pop();\n      visited[key] = VISIT_DONE;\n    }\n    forEach(invocables, visit);\n    invocables = cycle = visited = null; // plan is all that's required\n    \n    function isResolve(value) {\n      return isObject(value) && value.then && value.$$promises;\n    }\n    \n    return function (locals, parent, self) {\n      if (isResolve(locals) && self === undefined) {\n        self = parent; parent = locals; locals = null;\n      }\n      if (!locals) locals = NO_LOCALS;\n      else if (!isObject(locals)) {\n        throw new Error(\"'locals' must be an object\");\n      }       \n      if (!parent) parent = NO_PARENT;\n      else if (!isResolve(parent)) {\n        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n      }\n      \n      // To complete the overall resolution, we have to wait for the parent\n      // promise and for the promise for each invokable in our plan.\n      var resolution = $q.defer(),\n          result = resolution.promise,\n          promises = result.$$promises = {},\n          values = extend({}, locals),\n          wait = 1 + plan.length/3,\n          merged = false;\n          \n      function done() {\n        // Merge parent values we haven't got yet and publish our own $$values\n        if (!--wait) {\n          if (!merged) merge(values, parent.$$values); \n          result.$$values = values;\n          result.$$promises = result.$$promises || true; // keep for isResolve()\n          delete result.$$inheritedValues;\n          resolution.resolve(values);\n        }\n      }\n      \n      function fail(reason) {\n        result.$$failure = reason;\n        resolution.reject(reason);\n      }\n\n      // Short-circuit if parent has already failed\n      if (isDefined(parent.$$failure)) {\n        fail(parent.$$failure);\n        return result;\n      }\n      \n      if (parent.$$inheritedValues) {\n        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n      }\n\n      // Merge parent values if the parent has already resolved, or merge\n      // parent promises and wait if the parent resolve is still in progress.\n      extend(promises, parent.$$promises);\n      if (parent.$$values) {\n        merged = merge(values, omit(parent.$$values, invocableKeys));\n        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n        done();\n      } else {\n        if (parent.$$inheritedValues) {\n          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n        }        \n        parent.then(done, fail);\n      }\n      \n      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n      for (var i=0, ii=plan.length; i<ii; i+=3) {\n        if (locals.hasOwnProperty(plan[i])) done();\n        else invoke(plan[i], plan[i+1], plan[i+2]);\n      }\n      \n      function invoke(key, invocable, params) {\n        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n        var invocation = $q.defer(), waitParams = 0;\n        function onfailure(reason) {\n          invocation.reject(reason);\n          fail(reason);\n        }\n        // Wait for any parameter that we have a promise for (either from parent or from this\n        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n        forEach(params, function (dep) {\n          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n            waitParams++;\n            promises[dep].then(function (result) {\n              values[dep] = result;\n              if (!(--waitParams)) proceed();\n            }, onfailure);\n          }\n        });\n        if (!waitParams) proceed();\n        function proceed() {\n          if (isDefined(result.$$failure)) return;\n          try {\n            invocation.resolve($injector.invoke(invocable, self, values));\n            invocation.promise.then(function (result) {\n              values[key] = result;\n              done();\n            }, onfailure);\n          } catch (e) {\n            onfailure(e);\n          }\n        }\n        // Publish promise synchronously; invocations further down in the plan may depend on it.\n        promises[key] = invocation.promise;\n      }\n      \n      return result;\n    };\n  };\n  \n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#resolve\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Resolves a set of invocables. An invocable is a function to be invoked via \n   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n   * An invocable can either return a value directly,\n   * or a `$q` promise. If a promise is returned it will be resolved and the \n   * resulting value will be used instead. Dependencies of invocables are resolved \n   * (in this order of precedence)\n   *\n   * - from the specified `locals`\n   * - from another invocable that is part of this `$resolve` call\n   * - from an invocable that is inherited from a `parent` call to `$resolve` \n   *   (or recursively\n   * - from any ancestor `$resolve` of that parent).\n   *\n   * The return value of `$resolve` is a promise for an object that contains \n   * (in this order of precedence)\n   *\n   * - any `locals` (if specified)\n   * - the resolved return values of all injectables\n   * - any values inherited from a `parent` call to `$resolve` (if specified)\n   *\n   * The promise will resolve after the `parent` promise (if any) and all promises \n   * returned by injectables have been resolved. If any invocable \n   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n   * same error. A rejection of a `parent` promise (if specified) will likewise be \n   * propagated immediately. Once the `$resolve` promise has been rejected, no \n   * further invocables will be called.\n   * \n   * Cyclic dependencies between invocables are not permitted and will caues `$resolve`\n   * to throw an error. As a special case, an injectable can depend on a parameter \n   * with the same name as the injectable, which will be fulfilled from the `parent` \n   * injectable of the same name. This allows inherited values to be decorated. \n   * Note that in this case any other injectable in the same `$resolve` with the same\n   * dependency would see the decorated value, not the inherited value.\n   *\n   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n   * exception.\n   *\n   * Invocables are invoked eagerly as soon as all dependencies are available. \n   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n   *\n   * As a special case, an invocable can be a string, in which case it is taken to \n   * be a service name to be passed to `$injector.get()`. This is supported primarily \n   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n   * routes.\n   *\n   * @param {object} invocables functions to invoke or \n   * `$injector` services to fetch.\n   * @param {object} locals  values to make available to the injectables\n   * @param {object} parent  a promise returned by another call to `$resolve`.\n   * @param {object} self  the `this` for the invoked methods\n   * @return {object} Promise for an object that contains the resolved return value\n   * of all invocables, as well as any inherited and local values.\n   */\n  this.resolve = function (invocables, locals, parent, self) {\n    return this.study(invocables)(locals, parent, self);\n  };\n}\n\nangular.module('ui.router.util').service('$resolve', $Resolve);\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$templateFactory\n *\n * @requires $http\n * @requires $templateCache\n * @requires $injector\n *\n * @description\n * Service. Manages loading of templates.\n */\n$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\nfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromConfig\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a configuration object. \n   *\n   * @param {object} config Configuration object for which to load a template. \n   * The following properties are search in the specified order, and the first one \n   * that is defined is used to create the template:\n   *\n   * @param {string|object} config.template html string template or function to \n   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n   * @param {string|object} config.templateUrl url to load or a function returning \n   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n   * @param {Function} config.templateProvider function to invoke via \n   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n   * @param {object} params  Parameters to pass to the template function.\n   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n   * via a `templateProvider`. Defaults to `{ params: params }`.\n   *\n   * @return {string|object}  The template html as a string, or a promise for \n   * that string,or `null` if no template is configured.\n   */\n  this.fromConfig = function (config, params, locals) {\n    return (\n      isDefined(config.template) ? this.fromString(config.template, params) :\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n      null\n    );\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromString\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param {string|object} template html template as a string or function that \n   * returns an html template as a string.\n   * @param {object} params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that \n   * string.\n   */\n  this.fromString = function (template, params) {\n    return isFunction(template) ? template(params) : template;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromUrl\n   * @methodOf ui.router.util.$templateFactory\n   * \n   * @description\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function \n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromUrl = function (url, params) {\n    if (isFunction(url)) url = url(params);\n    if (url == null) return null;\n    else return $http\n        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n        .then(function(response) { return response.data; });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromProvider\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param {Function} provider Function to invoke via `$injector.invoke`\n   * @param {Object} params Parameters for the template.\n   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n   * `{ params: params }`.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromProvider = function (provider, params, locals) {\n    return $injector.invoke(provider, null, locals || { params: params });\n  };\n}\n\nangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\nvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:UrlMatcher\n *\n * @description\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n * \n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n * syntax, which optionally allows a regular expression for the parameter to be specified:\n *\n * * `':'` name - colon placeholder\n * * `'*'` name - catch-all placeholder\n * * `'{' name '}'` - curly placeholder\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters). For colon \n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\n * any number of characters.\n * \n * Examples:\n * \n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n * @param {string} pattern  The pattern to compile into a matcher.\n * @param {Object} config  A configuration object hash:\n * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n *   an existing UrlMatcher\n *\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n *\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n *   non-null) will start with this prefix.\n *\n * @property {string} source  The pattern that was passed into the constructor\n *\n * @property {string} sourcePath  The path portion of the source property\n *\n * @property {string} sourceSearch  The search portion of the source property\n *\n * @property {string} regex  The constructed regex that will be used to match against the url when \n *   it is time to determine which url will match.\n *\n * @returns {Object}  New `UrlMatcher` object\n */\nfunction UrlMatcher(pattern, config, parentMatcher) {\n  config = extend({ params: {} }, isObject(config) ? config : {});\n\n  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n  //   '*' name\n  //   ':' name\n  //   '{' name '}'\n  //   '{' name ':' regexp '}'\n  // The regular expression is somewhat complicated due to the need to allow curly braces\n  // inside the regular expression. The placeholder regexp breaks down as follows:\n  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n  //    \\{([\\w\\[\\]]+)(?:\\:( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n  //    \\\\.                            - a backslash escape\n  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      searchPlaceholder = /([:]?)([\\w\\[\\]-]+)|\\{([\\w\\[\\]-]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      compiled = '^', last = 0, m,\n      segments = this.segments = [],\n      parentParams = parentMatcher ? parentMatcher.params : {},\n      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n      paramNames = [];\n\n  function addParameter(id, type, config, location) {\n    paramNames.push(id);\n    if (parentParams[id]) return parentParams[id];\n    if (!/^\\w+(-+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    params[id] = new $$UMFP.Param(id, type, config, location);\n    return params[id];\n  }\n\n  function quoteRegExp(string, pattern, squash) {\n    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!pattern) return result;\n    switch(squash) {\n      case false: surroundPattern = ['(', ')'];   break;\n      case true:  surroundPattern = ['?(', ')?']; break;\n      default:    surroundPattern = ['(' + squash + \"|\", ')?'];  break;\n    }\n    return result + surroundPattern[0] + pattern + surroundPattern[1];\n  }\n\n  this.source = pattern;\n\n  // Split into static segments separated by path parameter placeholders.\n  // The number of segments is always 1 more than the number of parameters.\n  function matchDetails(m, isSearch) {\n    var id, regexp, segment, type, cfg, arrayMode;\n    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n    cfg         = config.params[id];\n    segment     = pattern.substring(last, m.index);\n    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n    type        = $$UMFP.type(regexp || \"string\") || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp) });\n    return {\n      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n    };\n  }\n\n  var p, param, segment;\n  while ((m = placeholder.exec(pattern))) {\n    p = matchDetails(m, false);\n    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n    param = addParameter(p.id, p.type, p.cfg, \"path\");\n    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash);\n    segments.push(p.segment);\n    last = placeholder.lastIndex;\n  }\n  segment = pattern.substring(last);\n\n  // Find any search parameter names and remove them from the last segment\n  var i = segment.indexOf('?');\n\n  if (i >= 0) {\n    var search = this.sourceSearch = segment.substring(i);\n    segment = segment.substring(0, i);\n    this.sourcePath = pattern.substring(0, last + i);\n\n    if (search.length > 0) {\n      last = 0;\n      while ((m = searchPlaceholder.exec(search))) {\n        p = matchDetails(m, true);\n        param = addParameter(p.id, p.type, p.cfg, \"search\");\n        last = placeholder.lastIndex;\n        // check if ?&\n      }\n    }\n  } else {\n    this.sourcePath = pattern;\n    this.sourceSearch = '';\n  }\n\n  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n  segments.push(segment);\n\n  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n  this.prefix = segments[0];\n  this.$$paramNames = paramNames;\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#concat\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns a new matcher for a pattern constructed by appending the path part and adding the\n * search parameters of the specified pattern to this pattern. The current pattern is not\n * modified. This can be understood as creating a pattern for URLs that are relative to (or\n * suffixes of) the current pattern.\n *\n * @example\n * The following two matchers are equivalent:\n * <pre>\n * new UrlMatcher('/user/{id}?q').concat('/details?date');\n * new UrlMatcher('/user/{id}/details?q&date');\n * </pre>\n *\n * @param {string} pattern  The pattern to append.\n * @param {Object} config  An object hash of the configuration for the matcher.\n * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n */\nUrlMatcher.prototype.concat = function (pattern, config) {\n  // Because order of search parameters is irrelevant, we can add our own search\n  // parameters to the end of the new pattern. Parse the new pattern by itself\n  // and then join the bits together, but it's much easier to do this on a string level.\n  var defaultConfig = {\n    caseInsensitive: $$UMFP.caseInsensitive(),\n    strict: $$UMFP.strictMode(),\n    squash: $$UMFP.defaultSquashPolicy()\n  };\n  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n};\n\nUrlMatcher.prototype.toString = function () {\n  return this.source;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#exec\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Tests the specified path against this matcher, and returns an object containing the captured\n * parameter values, or null if the path does not match. The returned object contains the values\n * of any search parameters that are mentioned in the pattern, but their value may be null if\n * they are not present in `searchParams`. This means that search parameters are always treated\n * as optional.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n *   x: '1', q: 'hello'\n * });\n * // returns { id: 'bob', q: 'hello', r: null }\n * </pre>\n *\n * @param {string} path  The URL path to match, e.g. `$location.path()`.\n * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n * @returns {Object}  The captured parameter values.\n */\nUrlMatcher.prototype.exec = function (path, searchParams) {\n  var m = this.regexp.exec(path);\n  if (!m) return null;\n  searchParams = searchParams || {};\n\n  var paramNames = this.parameters(), nTotal = paramNames.length,\n    nPath = this.segments.length - 1,\n    values = {}, i, j, cfg, paramName;\n\n  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\n  function decodePathArray(string) {\n    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n    function unquoteDashes(str) { return str.replace(/\\\\-/, \"-\"); }\n\n    var split = reverseString(string).split(/-(?!\\\\)/);\n    var allReversed = map(split, reverseString);\n    return map(allReversed, unquoteDashes).reverse();\n  }\n\n  for (i = 0; i < nPath; i++) {\n    paramName = paramNames[i];\n    var param = this.params[paramName];\n    var paramVal = m[i+1];\n    // if the param value matches a pre-replace pair, replace the value before decoding.\n    for (j = 0; j < param.replace; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n  for (/**/; i < nTotal; i++) {\n    paramName = paramNames[i];\n    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n  }\n\n  return values;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#parameters\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns the names of all path and search parameters of this pattern in an unspecified order.\n * \n * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n *    pattern has no parameters, an empty array is returned.\n */\nUrlMatcher.prototype.parameters = function (param) {\n  if (!isDefined(param)) return this.$$paramNames;\n  return this.params[param] || null;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#validate\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Checks an object hash of parameters to validate their correctness according to the parameter\n * types of this `UrlMatcher`.\n *\n * @param {Object} params The object hash of parameters to validate.\n * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n */\nUrlMatcher.prototype.validates = function (params) {\n  return this.params.$$validates(params);\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#format\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Creates a URL that matches this pattern by substituting the specified values\n * for the path and search parameters. Null values for path parameters are\n * treated as empty strings.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n * // returns '/user/bob?q=yes'\n * </pre>\n *\n * @param {Object} values  the values to substitute for the parameters in this pattern.\n * @returns {string}  the formatted URL (path and optionally search part).\n */\nUrlMatcher.prototype.format = function (values) {\n  values = values || {};\n  var segments = this.segments, params = this.parameters(), paramset = this.params;\n  if (!this.validates(values)) return null;\n\n  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\n  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n  }\n\n  for (i = 0; i < nTotal; i++) {\n    var isPathParam = i < nPath;\n    var name = params[i], param = paramset[name], value = param.value(values[name]);\n    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n    var squash = isDefaultValue ? param.squash : false;\n    var encoded = param.type.encode(value);\n\n    if (isPathParam) {\n      var nextSegment = segments[i + 1];\n      if (squash === false) {\n        if (encoded != null) {\n          if (isArray(encoded)) {\n            result += map(encoded, encodeDashes).join(\"-\");\n          } else {\n            result += encodeURIComponent(encoded);\n          }\n        }\n        result += nextSegment;\n      } else if (squash === true) {\n        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n        result += nextSegment.match(capture)[1];\n      } else if (isString(squash)) {\n        result += squash + nextSegment;\n      }\n    } else {\n      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n      if (!isArray(encoded)) encoded = [ encoded ];\n      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n      result += (search ? '&' : '?') + (name + '=' + encoded);\n      search = true;\n    }\n  }\n\n  return result;\n};\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:Type\n *\n * @description\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\n * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n * objects when matching or formatting URLs, or comparing or validating parameter values.\n *\n * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n * information on registering custom types.\n *\n * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n *        properties will override the default methods and/or pattern in `Type`'s public interface.\n * @example\n * <pre>\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * </pre>\n *\n * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n *           coming from a substring of a URL.\n *\n * @returns {Object}  Returns a new `Type` object.\n */\nfunction Type(config) {\n  extend(this, config);\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#is\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Detects whether a value is of a particular type. Accepts a native (decoded) value\n * and determines whether it matches the current `Type` object.\n *\n * @param {*} val  The value to check.\n * @param {string} key  Optional. If the type check is happening in the context of a specific\n *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n */\nType.prototype.is = function(val, key) {\n  return true;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#encode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n * only needs to be a representation of `val` that has been coerced to a string.\n *\n * @param {*} val  The value to encode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n */\nType.prototype.encode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#decode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Converts a parameter value (from URL string or transition param) to a custom/native value.\n *\n * @param {string} val  The URL parameter value to decode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {*}  Returns a custom representation of the URL parameter value.\n */\nType.prototype.decode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#equals\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Determines whether two decoded values are equivalent.\n *\n * @param {*} a  A value to compare against.\n * @param {*} b  A value to compare against.\n * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n */\nType.prototype.equals = function(a, b) {\n  return a == b;\n};\n\nType.prototype.$subPattern = function() {\n  var sub = this.pattern.toString();\n  return sub.substr(1, sub.length - 2);\n};\n\nType.prototype.pattern = /.*/;\n\nType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\n/*\n * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n * e.g.:\n * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n * - url: \"/path?queryParam=1&queryParam=2\n * - $stateParams.queryParam will be [1, 2]\n * if `mode` is \"auto\", then\n * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n */\nType.prototype.$asArray = function(mode, isSearch) {\n  if (!mode) return this;\n  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n  return new ArrayType(this, mode);\n\n  function ArrayType(type, mode) {\n    function bindTo(type, callbackName) {\n      return function() {\n        return type[callbackName].apply(type, arguments);\n      };\n    }\n\n    // Wrap non-array value as array\n    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n      switch(val.length) {\n        case 0: return undefined;\n        case 1: return mode === \"auto\" ? val[0] : val;\n        default: return val;\n      }\n    }\n    function falsey(val) { return !val; }\n\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n      return function handleArray(val) {\n        val = arrayWrap(val);\n        var result = map(val, callback);\n        if (allTruthyMode === true)\n          return filter(result, falsey).length === 0;\n        return arrayUnwrap(result);\n      };\n    }\n\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n      return function handleArray(val1, val2) {\n        var left = arrayWrap(val1), right = arrayWrap(val2);\n        if (left.length !== right.length) return false;\n        for (var i = 0; i < left.length; i++) {\n          if (!callback(left[i], right[i])) return false;\n        }\n        return true;\n      };\n    }\n\n    this.encode = arrayHandler(bindTo(type, 'encode'));\n    this.decode = arrayHandler(bindTo(type, 'decode'));\n    this.is     = arrayHandler(bindTo(type, 'is'), true);\n    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n    this.pattern = type.pattern;\n    this.$arrayMode = mode;\n  }\n};\n\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$urlMatcherFactory\n *\n * @description\n * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n * is also available to providers under the name `$urlMatcherFactoryProvider`.\n */\nfunction $UrlMatcherFactory() {\n  $$UMFP = this;\n\n  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\n  function valToString(val) { return val != null ? val.toString().replace(/\\//g, \"%2F\") : val; }\n  function valFromString(val) { return val != null ? val.toString().replace(/%2F/g, \"/\") : val; }\n//  TODO: in 1.0, make string .is() return false if value is undefined by default.\n//  function regexpMatches(val) { /*jshint validthis:true */ return isDefined(val) && this.pattern.test(val); }\n  function regexpMatches(val) { /*jshint validthis:true */ return this.pattern.test(val); }\n\n  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n    string: {\n      encode: valToString,\n      decode: valFromString,\n      is: regexpMatches,\n      pattern: /[^/]*/\n    },\n    int: {\n      encode: valToString,\n      decode: function(val) { return parseInt(val, 10); },\n      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /\\d+/\n    },\n    bool: {\n      encode: function(val) { return val ? 1 : 0; },\n      decode: function(val) { return parseInt(val, 10) !== 0; },\n      is: function(val) { return val === true || val === false; },\n      pattern: /0|1/\n    },\n    date: {\n      encode: function (val) {\n        if (!this.is(val))\n          return undefined;\n        return [ val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode: function (val) {\n        if (this.is(val)) return val;\n        var match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    json: {\n      encode: angular.toJson,\n      decode: angular.fromJson,\n      is: angular.isObject,\n      equals: angular.equals,\n      pattern: /[^/]*/\n    },\n    any: { // does not encode/decode\n      encode: angular.identity,\n      decode: angular.identity,\n      is: angular.identity,\n      equals: angular.equals,\n      pattern: /.*/\n    }\n  };\n\n  function getDefaultConfig() {\n    return {\n      strict: isStrictMode,\n      caseInsensitive: isCaseInsensitive\n    };\n  }\n\n  function isInjectable(value) {\n    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n  }\n\n  /**\n   * [Internal] Get the default value of a parameter, which may be an injectable function.\n   */\n  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n    if (!isInjectable(config.value)) return config.value;\n    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n    return injector.invoke(config.value);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns {boolean} the current value of caseInsensitive\n   */\n  this.caseInsensitive = function(value) {\n    if (isDefined(value))\n      isCaseInsensitive = value;\n    return isCaseInsensitive;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#strictMode\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns {boolean} the current value of strictMode\n   */\n  this.strictMode = function(value) {\n    if (isDefined(value))\n      isStrictMode = value;\n    return isStrictMode;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param {string} value A string that defines the default parameter URL squashing behavior.\n   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   */\n  this.defaultSquashPolicy = function(value) {\n    if (!isDefined(value)) return defaultSquashPolicy;\n    if (value !== true && value !== false && !isString(value))\n      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n    defaultSquashPolicy = value;\n    return value;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#compile\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n   *\n   * @param {string} pattern  The URL pattern.\n   * @param {Object} config  The config object hash.\n   * @returns {UrlMatcher}  The UrlMatcher.\n   */\n  this.compile = function (pattern, config) {\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#isMatcher\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n   *\n   * @param {Object} object  The object to perform the type check against.\n   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  this.isMatcher = function (o) {\n    if (!isObject(o)) return false;\n    var result = true;\n\n    forEach(UrlMatcher.prototype, function(val, name) {\n      if (isFunction(val)) {\n        result = result && (isDefined(o[name]) && isFunction(o[name]));\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#type\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n   * generate URLs with typed parameters.\n   *\n   * @param {string} name  The type name.\n   * @param {Object|Function} definition   The type definition. See\n   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\n   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   *\n   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n   *\n   * @example\n   * This is a simple example of a custom type that encodes and decodes items from an\n   * array, using the array index as the URL-encoded value:\n   *\n   * <pre>\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\n   *\n   * $urlMatcherFactoryProvider.type('listItem', {\n   *   encode: function(item) {\n   *     // Represent the list item in the URL using its corresponding index\n   *     return list.indexOf(item);\n   *   },\n   *   decode: function(item) {\n   *     // Look up the list item by index\n   *     return list[parseInt(item, 10)];\n   *   },\n   *   is: function(item) {\n   *     // Ensure the item is valid by checking to see that it appears\n   *     // in the list\n   *     return list.indexOf(item) > -1;\n   *   }\n   * });\n   *\n   * $stateProvider.state('list', {\n   *   url: \"/list/{item:listItem}\",\n   *   controller: function($scope, $stateParams) {\n   *     console.log($stateParams.item);\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n   * $state.go('list', { item: \"Ringo\" });\n   * </pre>\n   *\n   * This is a more complex example of a type that relies on dependency injection to\n   * interact with services, and uses the parameter name from the URL to infer how to\n   * handle encoding and decoding parameter values:\n   *\n   * <pre>\n   * // Defines a custom type that gets a value from a service,\n   * // where each service gets different types of values from\n   * // a backend API:\n   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n   *\n   *   // Matches up services to URL parameter names\n   *   var services = {\n   *     user: Users,\n   *     post: Posts\n   *   };\n   *\n   *   return {\n   *     encode: function(object) {\n   *       // Represent the object in the URL using its unique ID\n   *       return object.id;\n   *     },\n   *     decode: function(value, key) {\n   *       // Look up the object by ID, using the parameter\n   *       // name (key) to call the correct service\n   *       return services[key].findById(value);\n   *     },\n   *     is: function(object, key) {\n   *       // Check that object is a valid dbObject\n   *       return angular.isObject(object) && object.id && services[key];\n   *     }\n   *     equals: function(a, b) {\n   *       // Check the equality of decoded objects by comparing\n   *       // their unique IDs\n   *       return a.id === b.id;\n   *     }\n   *   };\n   * });\n   *\n   * // In a config() block, you can then attach URLs with\n   * // type-annotated parameters:\n   * $stateProvider.state('users', {\n   *   url: \"/users\",\n   *   // ...\n   * }).state('users.item', {\n   *   url: \"/{user:dbObject}\",\n   *   controller: function($scope, $stateParams) {\n   *     // $stateParams.user will now be an object returned from\n   *     // the Users service\n   *   },\n   *   // ...\n   * });\n   * </pre>\n   */\n  this.type = function (name, definition, definitionFn) {\n    if (!isDefined(definition)) return $types[name];\n    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\n    $types[name] = new Type(extend({ name: name }, definition));\n    if (definitionFn) {\n      typeQueue.push({ name: name, def: definitionFn });\n      if (!enqueue) flushTypeQueue();\n    }\n    return this;\n  };\n\n  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n  function flushTypeQueue() {\n    while(typeQueue.length) {\n      var type = typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      angular.extend($types[type.name], injector.invoke(type.def));\n    }\n  }\n\n  // Register default types. Store them in the prototype of $types.\n  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n  $types = inherit($types, {});\n\n  /* No need to document $get, since it returns this */\n  this.$get = ['$injector', function ($injector) {\n    injector = $injector;\n    enqueue = false;\n    flushTypeQueue();\n\n    forEach(defaultTypes, function(type, name) {\n      if (!$types[name]) $types[name] = new Type(type);\n    });\n    return this;\n  }];\n\n  this.Param = function Param(id, type, config, location) {\n    var self = this;\n    config = unwrapShorthand(config);\n    type = getType(config, type, location);\n    var arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n    var isOptional = config.value !== undefined;\n    var squash = getSquashPolicy(config, isOptional);\n    var replace = getReplace(config, arrayMode, isOptional, squash);\n\n    function unwrapShorthand(config) {\n      var keys = isObject(config) ? objectKeys(config) : [];\n      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n      if (isShorthand) config = { value: config };\n      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n      return config;\n    }\n\n    function getType(config, urlType, location) {\n      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n      if (urlType) return urlType;\n      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n      return config.type instanceof Type ? config.type : new Type(config.type);\n    }\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    /**\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n     */\n    function getSquashPolicy(config, isOptional) {\n      var squash = config.squash;\n      if (!isOptional || squash === false) return false;\n      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n      if (squash === true || isString(squash)) return squash;\n      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n    }\n\n    function getReplace(config, arrayMode, isOptional, squash) {\n      var replace, configuredKeys, defaultPolicy = [\n        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n      ];\n      replace = isArray(config.replace) ? config.replace : [];\n      if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n      configuredKeys = map(replace, function(item) { return item.from; } );\n      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n    }\n\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    function $$getDefaultValue() {\n      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      return injector.invoke(config.$$fn);\n    }\n\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    function $value(value) {\n      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n      function $replace(value) {\n        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n        return replacement.length ? replacement[0] : value;\n      }\n      value = $replace(value);\n      return isDefined(value) ? self.type.decode(value) : $$getDefaultValue();\n    }\n\n    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\n    extend(this, {\n      id: id,\n      type: type,\n      location: location,\n      array: arrayMode,\n      squash: squash,\n      replace: replace,\n      isOptional: isOptional,\n      value: $value,\n      dynamic: undefined,\n      config: config,\n      toString: toString\n    });\n  };\n\n  function ParamSet(params) {\n    extend(this, params || {});\n  }\n\n  ParamSet.prototype = {\n    $$new: function() {\n      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n    },\n    $$keys: function () {\n      var keys = [], chain = [], parent = this,\n        ignore = objectKeys(ParamSet.prototype);\n      while (parent) { chain.push(parent); parent = parent.$$parent; }\n      chain.reverse();\n      forEach(chain, function(paramset) {\n        forEach(objectKeys(paramset), function(key) {\n            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n        });\n      });\n      return keys;\n    },\n    $$values: function(paramValues) {\n      var values = {}, self = this;\n      forEach(self.$$keys(), function(key) {\n        values[key] = self[key].value(paramValues && paramValues[key]);\n      });\n      return values;\n    },\n    $$equals: function(paramValues1, paramValues2) {\n      var equal = true, self = this;\n      forEach(self.$$keys(), function(key) {\n        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n        if (!self[key].type.equals(left, right)) equal = false;\n      });\n      return equal;\n    },\n    $$validates: function $$validate(paramValues) {\n      var result = true, isOptional, val, param, self = this;\n\n      forEach(this.$$keys(), function(key) {\n        param = self[key];\n        val = paramValues[key];\n        isOptional = !val && param.isOptional;\n        result = result && (isOptional || !!param.type.is(val));\n      });\n      return result;\n    },\n    $$parent: undefined\n  };\n\n  this.ParamSet = ParamSet;\n}\n\n// Register as a provider so it's available to other providers\nangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\n/**\n * @ngdoc object\n * @name ui.router.router.$urlRouterProvider\n *\n * @requires ui.router.util.$urlMatcherFactoryProvider\n * @requires $locationProvider\n *\n * @description\n * `$urlRouterProvider` has the responsibility of watching `$location`. \n * When `$location` changes it runs through a list of rules one by one until a \n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n *\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\n * in your module config.\n */\n$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\nfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\n  // Returns a string that is a prefix of all strings matching the RegExp\n  function regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n  }\n\n  // Interpolates matched values into a String.replace()-style pattern\n  function interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n      return match[what === '$' ? 0 : Number(what)];\n    });\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#rule\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\n   * specific URLs.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {object} rule Handler function that takes `$injector` and `$location`\n   * services as arguments. You can use them to return a valid path as a string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.rule = function (rule) {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    rules.push(rule);\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouterProvider#otherwise\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines a path that is used when an invalid route is requested.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} rule The url path you want to redirect to or a function \n   * rule that returns the url path. The function version is passed two params: \n   * `$injector` and `$location` services, and must return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.otherwise = function (rule) {\n    if (isString(rule)) {\n      var redirect = rule;\n      rule = function () { return redirect; };\n    }\n    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    otherwise = rule;\n    return this;\n  };\n\n\n  function handleIfMatch($injector, handler, match) {\n    if (!match) return false;\n    var result = $injector.invoke(handler, handler, { $match: match });\n    return isDefined(result) ? result : true;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#when\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Registers a handler for a given url matching. if handle is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\n   * matches. You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} what The incoming path that you want to redirect.\n   * @param {string|object} handler The path you want to redirect your user to.\n   */\n  this.when = function (what, handler) {\n    var redirect, handlerIsString = isString(handler);\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    var strategies = {\n      matcher: function (what, handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(handler);\n          handler = ['$match', function ($match) { return redirect.format($match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n        }, {\n          prefix: isString(what.prefix) ? what.prefix : ''\n        });\n      },\n      regex: function (what, handler) {\n        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = handler;\n          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(what)\n        });\n      }\n    };\n\n    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\n    for (var n in check) {\n      if (check[n]) return this.rule(strategies[n](what, handler));\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Disables (or enables) deferring location change interception.\n   *\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n   * defer a transition but maintain the current URL), call this method at configuration time.\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n   * `$locationChangeSuccess` event handler.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   // this allows you to configure custom behavior in between\n   *   // location changes and route synchronization:\n   *   $urlRouterProvider.deferIntercept();\n   *\n   * }).run(function ($rootScope, $urlRouter, UserService) {\n   *\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n   *     // UserService is an example service for managing user state\n   *     if (UserService.isLoggedIn()) return;\n   *\n   *     // Prevent $urlRouter's default handler from firing\n   *     e.preventDefault();\n   *\n   *     UserService.handleLogin().then(function() {\n   *       // Once the user has logged in, sync the current URL\n   *       // to the router:\n   *       $urlRouter.sync();\n   *     });\n   *   });\n   *\n   *   // Configures $urlRouter's listener *after* your custom listener\n   *   $urlRouter.listen();\n   * });\n   * </pre>\n   *\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n            no parameter is equivalent to `true`.\n   */\n  this.deferIntercept = function (defer) {\n    if (defer === undefined) defer = true;\n    interceptDeferred = defer;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouter\n   *\n   * @requires $location\n   * @requires $rootScope\n   * @requires $injector\n   * @requires $browser\n   *\n   * @description\n   *\n   */\n  this.$get = $get;\n  $get.$inject = ['$location', '$rootScope', '$injector', '$browser'];\n  function $get(   $location,   $rootScope,   $injector,   $browser) {\n\n    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\n    function appendBasePath(url, isHtml5, absolute) {\n      if (baseHref === '/') return url;\n      if (isHtml5) return baseHref.slice(0, -1) + url;\n      if (absolute) return baseHref.slice(1) + url;\n      return url;\n    }\n\n    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n    function update(evt) {\n      if (evt && evt.defaultPrevented) return;\n      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n      lastPushedUrl = undefined;\n      if (ignoreUpdate) return true;\n\n      function check(rule) {\n        var handled = rule($injector, $location);\n\n        if (!handled) return false;\n        if (isString(handled)) $location.replace().url(handled);\n        return true;\n      }\n      var n = rules.length, i;\n\n      for (i = 0; i < n; i++) {\n        if (check(rules[i])) return;\n      }\n      // always check otherwise last to allow dynamic updates to the set of rules\n      if (otherwise) check(otherwise);\n    }\n\n    function listen() {\n      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n      return listener;\n    }\n\n    if (!interceptDeferred) listen();\n\n    return {\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#sync\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n       * with the transition by calling `$urlRouter.sync()`.\n       *\n       * @example\n       * <pre>\n       * angular.module('app', ['ui.router'])\n       *   .run(function($rootScope, $urlRouter) {\n       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n       *       // Halt state change from even starting\n       *       evt.preventDefault();\n       *       // Perform custom logic\n       *       var meetsRequirement = ...\n       *       // Continue with the update and state transition if logic allows\n       *       if (meetsRequirement) $urlRouter.sync();\n       *     });\n       * });\n       * </pre>\n       */\n      sync: function() {\n        update();\n      },\n\n      listen: function() {\n        return listen();\n      },\n\n      update: function(read) {\n        if (read) {\n          location = $location.url();\n          return;\n        }\n        if ($location.url() === location) return;\n\n        $location.url(location);\n        $location.replace();\n      },\n\n      push: function(urlMatcher, params, options) {\n        $location.url(urlMatcher.format(params || {}));\n        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n        if (options && options.replace) $location.replace();\n      },\n\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#href\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * A URL generation method that returns the compiled URL for a given\n       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n       *\n       * @example\n       * <pre>\n       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n       *   person: \"bob\"\n       * });\n       * // $bob == \"/about/bob\";\n       * </pre>\n       *\n       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n       * @param {object=} options Options object. The options are:\n       *\n       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n       *\n       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n       */\n      href: function(urlMatcher, params, options) {\n        if (!urlMatcher.validates(params)) return null;\n\n        var isHtml5 = $locationProvider.html5Mode();\n        if (angular.isObject(isHtml5)) {\n          isHtml5 = isHtml5.enabled;\n        }\n        \n        var url = urlMatcher.format(params);\n        options = options || {};\n\n        if (!isHtml5 && url !== null) {\n          url = \"#\" + $locationProvider.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute);\n\n        if (!options.absolute || !url) {\n          return url;\n        }\n\n        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n\n        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n      }\n    };\n  }\n}\n\nangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\n$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\nfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\n  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\n  // Builds state properties from definition passed to registerState()\n  var stateBuilder = {\n\n    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n    // state.children = [];\n    // if (parent) parent.children.push(state);\n    parent: function(state) {\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n      // regex matches any valid composite state name\n      // would match \"contact.list\" but not \"contacts\"\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n      return compositeName ? findState(compositeName[1]) : root;\n    },\n\n    // inherit 'data' from parent and override by own values (if any)\n    data: function(state) {\n      if (state.parent && state.parent.data) {\n        state.data = state.self.data = extend({}, state.parent.data, state.data);\n      }\n      return state.data;\n    },\n\n    // Build a URLMatcher if necessary, either via a relative or absolute URL\n    url: function(state) {\n      var url = state.url, config = { params: state.params || {} };\n\n      if (isString(url)) {\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n        return (state.parent.navigable || root).url.concat(url, config);\n      }\n\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n    },\n\n    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n    navigable: function(state) {\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\n    },\n\n    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n    ownParams: function(state) {\n      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n      forEach(state.params || {}, function(config, id) {\n        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n      });\n      return params;\n    },\n\n    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n    params: function(state) {\n      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), state.ownParams) : new $$UMFP.ParamSet();\n    },\n\n    // If there is no explicit multi-view configuration, make one up so we don't have\n    // to handle both cases in the view directive later. Note that having an explicit\n    // 'views' property will mean the default unnamed view properties are ignored. This\n    // is also a good time to resolve view names to absolute names, so everything is a\n    // straight lookup at link time.\n    views: function(state) {\n      var views = {};\n\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n        views[name] = view;\n      });\n      return views;\n    },\n\n    // Keep a full path from the root down to this state as this is needed for state activation.\n    path: function(state) {\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n    },\n\n    // Speed up $state.contains() as it's used a lot\n    includes: function(state) {\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\n      includes[state.name] = true;\n      return includes;\n    },\n\n    $delegates: {}\n  };\n\n  function isRelative(stateName) {\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n  function findState(stateOrName, base) {\n    if (!stateOrName) return undefined;\n\n    var isStr = isString(stateOrName),\n        name  = isStr ? stateOrName : stateOrName.name,\n        path  = isRelative(name);\n\n    if (path) {\n      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n      base = findState(base);\n      \n      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\n      for (; i < pathLength; i++) {\n        if (rel[i] === \"\" && i === 0) {\n          current = base;\n          continue;\n        }\n        if (rel[i] === \"^\") {\n          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n          current = current.parent;\n          continue;\n        }\n        break;\n      }\n      rel = rel.slice(i).join(\".\");\n      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n    }\n    var state = states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    }\n    return undefined;\n  }\n\n  function queueState(parentName, state) {\n    if (!queue[parentName]) {\n      queue[parentName] = [];\n    }\n    queue[parentName].push(state);\n  }\n\n  function flushQueuedChildren(parentName) {\n    var queued = queue[parentName] || [];\n    while(queued.length) {\n      registerState(queued.shift());\n    }\n  }\n\n  function registerState(state) {\n    // Wrap a new object around the state so we can store our private details easily.\n    state = inherit(state, {\n      self: state,\n      resolve: state.resolve || {},\n      toString: function() { return this.name; }\n    });\n\n    var name = state.name;\n    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"'' is already defined\");\n\n    // Get parent name\n    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n        : (isString(state.parent)) ? state.parent\n        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n        : '';\n\n    // If parent is not registered yet, add state to queue and register later\n    if (parentName && !states[parentName]) {\n      return queueState(parentName, state.self);\n    }\n\n    for (var key in stateBuilder) {\n      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n    }\n    states[name] = state;\n\n    // Register the state in the global state list and with $urlRouter if necessary.\n    if (!state[abstractKey] && state.url) {\n      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n          $state.transitionTo(state, $match, { inherit: true, location: false });\n        }\n      }]);\n    }\n\n    // Register any queued children\n    flushQueuedChildren(name);\n\n    return state;\n  }\n\n  // Checks text to see if it looks like a glob.\n  function isGlob (text) {\n    return text.indexOf('*') > -1;\n  }\n\n  // Returns true if glob matches current $state name.\n  function doesStateMatchGlob (glob) {\n    var globSegments = glob.split('.'),\n        segments = $state.$current.name.split('.');\n\n    //match greedy starts\n    if (globSegments[0] === '**') {\n       segments = segments.slice(indexOf(segments, globSegments[1]));\n       segments.unshift('**');\n    }\n    //match greedy ends\n    if (globSegments[globSegments.length - 1] === '**') {\n       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n       segments.push('**');\n    }\n\n    if (globSegments.length != segments.length) {\n      return false;\n    }\n\n    //match single stars\n    for (var i = 0, l = globSegments.length; i < l; i++) {\n      if (globSegments[i] === '*') {\n        segments[i] = '*';\n      }\n    }\n\n    return segments.join('') === globSegments.join('');\n  }\n\n\n  // Implicit root state that is always active\n  root = registerState({\n    name: '',\n    url: '^',\n    views: null,\n    'abstract': true\n  });\n  root.navigable = null;\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the \n   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n   * to add custom functionality to ui-router, for example inferring templateUrl \n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new \n   * properties within the state's internal definition. There is currently no clear \n   * use-case for this beyond accessing internal states (i.e. $state.$current), \n   * however, expect this to become increasingly relevant as we introduce additional \n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of \n   * execution of the builder functions in non-deterministic. Builder functions \n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to \n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view \n   *   name (i.e. \"viewName@stateName\") and each value is the config object \n   *   (template, controller) for the view. Even when you don't use the views object \n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template \n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state. \n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that \n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   var result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     var autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate. \n   * @param {object} func A function that is responsible for decorating the original \n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  this.decorator = decorator;\n  function decorator(name, func) {\n    /*jshint validthis: true */\n    if (isString(name) && !isDefined(func)) {\n      return stateBuilder[name];\n    }\n    if (!isFunction(func) || !isString(name)) {\n      return this;\n    }\n    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n      stateBuilder.$delegates[name] = stateBuilder[name];\n    }\n    stateBuilder[name] = func;\n    return this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} stateConfig State configuration object.\n   * @param {string|function=} stateConfig.template\n   * <a id='template'></a>\n   *   html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property \n   *   takes precedence over templateUrl.\n   *   \n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <pre>template:\n   *   \"<h1>inline template definition</h1>\" +\n   *   \"<div ui-view></div>\"</pre>\n   * <pre>template: function(params) {\n   *       return \"<h1>generated template</h1>\"; }</pre>\n   * </div>\n   *\n   * @param {string|function=} stateConfig.templateUrl\n   * <a id='templateUrl'></a>\n   *\n   *   path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *   \n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n   *     applying the current state\n   *\n   * <pre>templateUrl: \"home.html\"</pre>\n   * <pre>templateUrl: function(params) {\n   *     return myTemplates[params.pageId]; }</pre>\n   *\n   * @param {function=} stateConfig.templateProvider\n   * <a id='templateProvider'></a>\n   *    Provider function that returns HTML content string.\n   * <pre> templateProvider:\n   *       function(MyTemplateService, params) {\n   *         return MyTemplateService.getTemplate(params.pageId);\n   *       }</pre>\n   *\n   * @param {string|function=} stateConfig.controller\n   * <a id='controller'></a>\n   *\n   *  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *   Optionally, the ControllerAs may be declared here.\n   * <pre>controller: \"MyRegisteredController\"</pre>\n   * <pre>controller:\n   *     \"MyRegisteredController as fooCtrl\"}</pre>\n   * <pre>controller: function($scope, MyService) {\n   *     $scope.data = MyService.getData(); }</pre>\n   *\n   * @param {function=} stateConfig.controllerProvider\n   * <a id='controllerProvider'></a>\n   *\n   * Injectable provider function that returns the actual controller or string.\n   * <pre>controllerProvider:\n   *   function(MyResolveData) {\n   *     if (MyResolveData.foo)\n   *       return \"FooCtrl\"\n   *     else if (MyResolveData.bar)\n   *       return \"BarCtrl\";\n   *     else return function($scope) {\n   *       $scope.baz = \"Qux\";\n   *     }\n   *   }</pre>\n   *\n   * @param {string=} stateConfig.controllerAs\n   * <a id='controllerAs'></a>\n   * \n   * A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   * <pre>controllerAs: \"myCtrl\"</pre>\n   *\n   * @param {object=} stateConfig.resolve\n   * <a id='resolve'></a>\n   *\n   * An optional map&lt;string, function&gt; of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises, \n   *   the router will wait for them all to be resolved before the controller is instantiated.\n   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n   *   and the values of the resolved promises are injected into any controllers that reference them.\n   *   If any  of the promises are rejected the $stateChangeError event is fired.\n   *\n   *   The map object is:\n   *   \n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n   *     it is injected and return value it treated as dependency. If result is a promise, it is \n   *     resolved before its value is injected into controller.\n   *\n   * <pre>resolve: {\n   *     myResolve1:\n   *       function($http, $stateParams) {\n   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n   *       }\n   *     }</pre>\n   *\n   * @param {string=} stateConfig.url\n   * <a id='url'></a>\n   *\n   *   A url fragment with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any \n   *   parameters that were passed.\n   *\n   * examples:\n   * <pre>url: \"/home\"\n   * url: \"/users/:userid\"\n   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n   * url: \"/books/{categoryid:int}\"\n   * url: \"/books/{publishername:string}/{categoryid:int}\"\n   * url: \"/messages?before&after\"\n   * url: \"/messages?{before:date}&{after:date}\"</pre>\n   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n   *\n   * @param {object=} stateConfig.views\n   * <a id='views'></a>\n   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n   * manually/explicitly.\n   *\n   * Examples:\n   *\n   * Targets three named `ui-view`s in the parent state's template\n   * <pre>views: {\n   *     header: {\n   *       controller: \"headerCtrl\",\n   *       templateUrl: \"header.html\"\n   *     }, body: {\n   *       controller: \"bodyCtrl\",\n   *       templateUrl: \"body.html\"\n   *     }, footer: {\n   *       controller: \"footCtrl\",\n   *       templateUrl: \"footer.html\"\n   *     }\n   *   }</pre>\n   *\n   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n   * <pre>views: {\n   *     'header@top': {\n   *       controller: \"msgHeaderCtrl\",\n   *       templateUrl: \"msgHeader.html\"\n   *     }, 'body': {\n   *       controller: \"messagesCtrl\",\n   *       templateUrl: \"messages.html\"\n   *     }\n   *   }</pre>\n   *\n   * @param {boolean=} [stateConfig.abstract=false]\n   * <a id='abstract'></a>\n   * An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   * <pre>abstract: true</pre>\n   *\n   * @param {function=} stateConfig.onEnter\n   * <a id='onEnter'></a>\n   *\n   * Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explictly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onEnter: function(MyService, $stateParams) {\n   *     MyService.foo($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {function=} stateConfig.onExit\n   * <a id='onExit'></a>\n   *\n   * Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explictly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onExit: function(MyService, $stateParams) {\n   *     MyService.cleanup($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n   * <a id='reloadOnSearch'></a>\n   *\n   * If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   * <pre>reloadOnSearch: false</pre>\n   *\n   * @param {object=} stateConfig.data\n   * <a id='data'></a>\n   *\n   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n   *   the entire subtree via prototypal inheritance.\n   *\n   * <pre>data: {\n   *     requiredRole: 'foo'\n   * } </pre>\n   *\n   * @param {object=} stateConfig.params\n   * <a id='params'></a>\n   *\n   * A map which optionally configures parameters declared in the `url`, or\n   *   defines additional non-url parameters.  For each parameter being\n   *   configured, add a configuration object keyed to the name of the parameter.\n   *\n   *   Each parameter configuration object may contain the following properties:\n   *\n   *   - ** value ** - {object|function=}: specifies the default value for this\n   *     parameter.  This implicitly sets this parameter as optional.\n   *\n   *     When UI-Router routes to a state and no value is\n   *     specified for this parameter in the URL or transition, the\n   *     default value will be used instead.  If `value` is a function,\n   *     it will be injected and invoked, and the return value used.\n   *\n   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n   *     is treated as \"the default value is `null`\".\n   *\n   *     *Shorthand*: If you only need to configure the default value of the\n   *     parameter, you may use a shorthand syntax.   In the **`params`**\n   *     map, instead mapping the param name to a full parameter configuration\n   *     object, simply set map it to the default parameter value, e.g.:\n   *\n   * <pre>// define a parameter's default value\n   * params: {\n   *     param1: { value: \"defaultValue\" }\n   * }\n   * // shorthand default values\n   * params: {\n   *     param1: \"defaultValue\",\n   *     param2: \"param2Default\"\n   * }</pre>\n   *\n   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n   *     treated as an array of values.  If you specified a Type, the value will be\n   *     treated as an array of the specified Type.  Note: query parameter values\n   *     default to a special `\"auto\"` mode.\n   *\n   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n   *     value (e.g.: `{ foo: '1' }`).\n   *\n   * <pre>params: {\n   *     param1: { array: true }\n   * }</pre>\n   *\n   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n   *     configured default squash policy.\n   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n   *\n   *   There are three squash settings:\n   *\n   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n   *       This can allow for cleaner looking URLs.\n   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n   *\n   * <pre>params: {\n   *     param1: {\n   *       value: \"defaultId\",\n   *       squash: true\n   * } }\n   * // squash \"defaultValue\" to \"~\"\n   * params: {\n   *     param1: {\n   *       value: \"defaultValue\",\n   *       squash: \"~\"\n   * } }\n   * </pre>\n   *\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   */\n  this.state = state;\n  function state(name, definition) {\n    /*jshint validthis: true */\n    if (isObject(name)) definition = name;\n    else definition.name = name;\n    registerState(definition);\n    return this;\n  }\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$state\n   *\n   * @requires $rootScope\n   * @requires $q\n   * @requires ui.router.state.$view\n   * @requires $injector\n   * @requires ui.router.util.$resolve\n   * @requires ui.router.state.$stateParams\n   * @requires ui.router.router.$urlRouter\n   *\n   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n   * you'd like to test against the current active state.\n   * @property {object} current A reference to the state's config object. However \n   * you passed it in. Useful for accessing custom data.\n   * @property {object} transition Currently pending transition. A promise that'll \n   * resolve or reject.\n   *\n   * @description\n   * `$state` service is responsible for representing states as well as transitioning\n   * between them. It also provides interfaces to ask for current state or even states\n   * you're coming from.\n   */\n  this.$get = $get;\n  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\n    var TransitionSuperseded = $q.reject(new Error('transition superseded'));\n    var TransitionPrevented = $q.reject(new Error('transition prevented'));\n    var TransitionAborted = $q.reject(new Error('transition aborted'));\n    var TransitionFailed = $q.reject(new Error('transition failed'));\n\n    // Handles the case where a state which is the target of a transition is not found, and the user\n    // can optionally retry or defer the transition\n    function handleRedirect(redirect, state, params, options) {\n      /**\n       * @ngdoc event\n       * @name ui.router.state.$state#$stateNotFound\n       * @eventOf ui.router.state.$state\n       * @eventType broadcast on root scope\n       * @description\n       * Fired when a requested state **cannot be found** using the provided state name during transition.\n       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n       *\n       * @param {Object} event Event object.\n       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n       * @param {State} fromState Current state object.\n       * @param {Object} fromParams Current state params.\n       *\n       * @example\n       *\n       * <pre>\n       * // somewhere, assume lazy.state has not been defined\n       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n       *\n       * // somewhere else\n       * $scope.$on('$stateNotFound',\n       * function(event, unfoundState, fromState, fromParams){\n       *     console.log(unfoundState.to); // \"lazy.state\"\n       *     console.log(unfoundState.toParams); // {a:1, b:2}\n       *     console.log(unfoundState.options); // {inherit:false} + default options\n       * })\n       * </pre>\n       */\n      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\n      if (evt.defaultPrevented) {\n        $urlRouter.update();\n        return TransitionAborted;\n      }\n\n      if (!evt.retry) {\n        return null;\n      }\n\n      // Allow the handler to return a promise to defer state lookup retry\n      if (options.$retry) {\n        $urlRouter.update();\n        return TransitionFailed;\n      }\n      var retryTransition = $state.transition = $q.when(evt.retry);\n\n      retryTransition.then(function() {\n        if (retryTransition !== $state.transition) return TransitionSuperseded;\n        redirect.options.$retry = true;\n        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n      }, function() {\n        return TransitionAborted;\n      });\n      $urlRouter.update();\n\n      return retryTransition;\n    }\n\n    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\n    $state = {\n      params: {},\n      current: root.self,\n      $current: root,\n      transition: null\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#reload\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method that force reloads the current state. All resolves are re-resolved, events are not re-fired, \n     * and controllers reinstantiated (bug with controllers reinstantiating right now, fixing soon).\n     *\n     * @example\n     * <pre>\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.reload = function reload() {\n      return $state.transitionTo($state.current, $stateParams, { reload: true, inherit: false, notify: true });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#go\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Convenience method for transitioning to a new state. `$state.go` calls \n     * `$state.transitionTo` internally but automatically sets options to \n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n     * This allows you to easily use an absolute or relative to path and specify \n     * only the parameters you'd like to update (while letting unspecified parameters \n     * inherit from the currently active ancestor states).\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * </pre>\n     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n     *\n     * @param {string} to Absolute state name or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param {object=} params A map of the parameters that will be sent to the state, \n     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n     * defined parameters. This allows, for example, going to a sibling state that shares parameters\n     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     * will get you all current parameters, etc.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * Possible success values:\n     *\n     * - $state.current\n     *\n     * <br/>Possible rejection values:\n     *\n     * - 'transition superseded' - when a newer transition has been started after this one\n     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n     *   when a `$stateNotFound` `event.retry` promise errors.\n     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n     * - *resolve error* - when an error has occurred with a `resolve`\n     *\n     */\n    $state.go = function go(to, params, options) {\n      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#transitionTo\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * </pre>\n     *\n     * @param {string} to State name.\n     * @param {object=} toParams A map of the parameters that will be sent to the state,\n     * will populate $stateParams.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.transitionTo = function transitionTo(to, toParams, options) {\n      toParams = toParams || {};\n      options = extend({\n        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n      }, options || {});\n\n      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n      var evt, toState = findState(to, options.relative);\n\n      if (!isDefined(toState)) {\n        var redirect = { to: to, toParams: toParams, options: options };\n        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\n        if (redirectResult) {\n          return redirectResult;\n        }\n\n        // Always retry once if the $stateNotFound was not prevented\n        // (handles either redirect changed or state lazy-definition)\n        to = redirect.to;\n        toParams = redirect.toParams;\n        options = redirect.options;\n        toState = findState(to, options.relative);\n\n        if (!isDefined(toState)) {\n          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n        }\n      }\n      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\n      toParams = toState.params.$$values(toParams);\n      to = toState;\n\n      var toPath = to.path;\n\n      // Starting from the root of the path, keep all levels that haven't changed\n      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\n      if (!options.reload) {\n        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      }\n\n      // If we're going to the same state and all locals are kept, we've got nothing to do.\n      // But clear 'transition', as we still want to cancel any other pending transitions.\n      // TODO: We may not want to bump 'transition' if we're called from a location change\n      // that we've initiated ourselves, because we might accidentally abort a legitimate\n      // transition initiated from code?\n      if (shouldTriggerReload(to, from, locals, options)) {\n        if (to.self.reloadOnSearch !== false) $urlRouter.update();\n        $state.transition = null;\n        return $q.when($state.current);\n      }\n\n      // Filter parameters before we pass them to event handlers etc.\n      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n\n      // Broadcast start event and cancel the transition if requested\n      if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeStart\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n         * to prevent the transition from happening and then the transition promise will be\n         * rejected with a `'transition prevented'` value.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         *\n         * @example\n         *\n         * <pre>\n         * $rootScope.$on('$stateChangeStart',\n         * function(event, toState, toParams, fromState, fromParams){\n         *     event.preventDefault();\n         *     // transitionTo() promise will be rejected with\n         *     // a 'transition prevented' error\n         * })\n         * </pre>\n         */\n        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams).defaultPrevented) {\n          $urlRouter.update();\n          return TransitionPrevented;\n        }\n      }\n\n      // Resolve locals for the remaining states, but don't update any global state just\n      // yet -- if anything fails to resolve the current state needs to remain untouched.\n      // We also set up an inheritance chain for the locals here. This allows the view directive\n      // to quickly look up the correct definition for each view in the current state. Even\n      // though we create the locals object itself outside resolveState(), it is initially\n      // empty and gets filled asynchronously. We need to keep track of the promise for the\n      // (fully resolved) current locals, and pass this down the chain.\n      var resolved = $q.when(locals);\n\n      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n        locals = toLocals[l] = inherit(locals);\n        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n      }\n\n      // Once everything is resolved, we are ready to perform the actual transition\n      // and return a promise for the new state. We also keep track of what the\n      // current promise is, so that we can detect overlapping transitions and\n      // keep only the outcome of the last transition.\n      var transition = $state.transition = resolved.then(function () {\n        var l, entering, exiting;\n\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Exit 'from' states not kept\n        for (l = fromPath.length - 1; l >= keep; l--) {\n          exiting = fromPath[l];\n          if (exiting.self.onExit) {\n            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n          }\n          exiting.locals = null;\n        }\n\n        // Enter 'to' states not kept\n        for (l = keep; l < toPath.length; l++) {\n          entering = toPath[l];\n          entering.locals = toLocals[l];\n          if (entering.self.onEnter) {\n            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n          }\n        }\n\n        // Run it again, to catch any transitions in callbacks\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Update globals in $state\n        $state.$current = to;\n        $state.current = to.self;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        $state.transition = null;\n\n        if (options.location && to.navigable) {\n          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n        }\n\n        if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeSuccess\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired once the state transition is **complete**.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         */\n          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n        }\n        $urlRouter.update(true);\n\n        return $state.current;\n      }, function (error) {\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        $state.transition = null;\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeError\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when an **error occurs** during transition. It's important to note that if you\n         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n         * they will not throw traditionally. You must listen for this $stateChangeError event to\n         * catch **ALL** errors.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         * @param {Error} error The resolve error object.\n         */\n        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\n        if (!evt.defaultPrevented) {\n            $urlRouter.update();\n        }\n\n        return $q.reject(error);\n      });\n\n      return transition;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#is\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n     * but only checks for the full state name. If params is supplied then it will be\n     * tested for strict equality against the current active params object, so all params\n     * must match with none missing and no extras.\n     *\n     * @example\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     * test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it is the state.\n     */\n    $state.is = function is(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) { return undefined; }\n      if ($state.$current !== state) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#includes\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * @example\n     * Partial and relative names\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     *\n     * // Using relative names (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n     * </pre>\n     *\n     * Basic globbing patterns\n     * <pre>\n     * $state.$current.name = 'contacts.details.item.url';\n     *\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * </pre>\n     *\n     * @param {string} stateOrName A partial name, relative name, or glob pattern\n     * to be searched for within the current state name.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n     * that you'd like to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n     * .includes will test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    $state.includes = function includes(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      if (isString(stateOrName) && isGlob(stateOrName)) {\n        if (!doesStateMatchGlob(stateOrName)) {\n          return false;\n        }\n        stateOrName = $state.$current.name;\n      }\n\n      var state = findState(stateOrName, options.relative);\n      if (!isDefined(state)) { return undefined; }\n      if (!isDefined($state.$current.includes[state.name])) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;\n    };\n\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#href\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A url generation method that returns the compiled url for the given state populated with the given params.\n     *\n     * @example\n     * <pre>\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n     * @param {object=} params An object of parameter values to fill the state's required parameters.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     * \n     * @returns {string} compiled state url\n     */\n    $state.href = function href(stateOrName, params, options) {\n      options = extend({\n        lossy:    true,\n        inherit:  true,\n        absolute: false,\n        relative: $state.$current\n      }, options || {});\n\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) return null;\n      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n      \n      var nav = (state && options.lossy) ? state.navigable : state;\n\n      if (!nav || nav.url === undefined || nav.url === null) {\n        return null;\n      }\n      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys(), params || {}), {\n        absolute: options.absolute\n      });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#get\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Returns the state configuration object for any specific state or all states.\n     *\n     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n     * the requested state. If not provided, returns an array of ALL state configs.\n     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n     * @returns {Object|Array} State configuration object or array of all objects.\n     */\n    $state.get = function (stateOrName, context) {\n      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n      var state = findState(stateOrName, context || $state.$current);\n      return (state && state.self) ? state.self : null;\n    };\n\n    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n      // Make a restricted $stateParams with only the parameters that apply to this state if\n      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n      // we also need $stateParams to be available for any $injector calls we make during the\n      // dependency resolution process.\n      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n      var locals = { $stateParams: $stateParams };\n\n      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n      // We're also including $stateParams in this; that way the parameters are restricted\n      // to the set that should be visible to the state, and are independent of when we update\n      // the global $state and $stateParams values.\n      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n      var promises = [dst.resolve.then(function (globals) {\n        dst.globals = globals;\n      })];\n      if (inherited) promises.push(inherited);\n\n      // Resolve template and dependencies for all views.\n      forEach(state.views, function (view, name) {\n        var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n        injectables.$template = [ function () {\n          return $view.load(name, { view: view, locals: locals, params: $stateParams, notify: options.notify }) || '';\n        }];\n\n        promises.push($resolve.resolve(injectables, locals, dst.resolve, state).then(function (result) {\n          // References to the controller (only instantiated at link time)\n          if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n            var injectLocals = angular.extend({}, injectables, locals);\n            result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n          } else {\n            result.$$controller = view.controller;\n          }\n          // Provide access to the state itself for internal use\n          result.$$state = state;\n          result.$$controllerAs = view.controllerAs;\n          dst[name] = result;\n        }));\n      });\n\n      // Wait for all the promises and then return the activation object\n      return $q.all(promises).then(function (values) {\n        return dst;\n      });\n    }\n\n    return $state;\n  }\n\n  function shouldTriggerReload(to, from, locals, options) {\n    if (to === from && ((locals === from.locals && !options.reload) || (to.self.reloadOnSearch === false))) {\n      return true;\n    }\n  }\n}\n\nangular.module('ui.router.state')\n  .value('$stateParams', {})\n  .provider('$state', $StateProvider);\n\n\n$ViewProvider.$inject = [];\nfunction $ViewProvider() {\n\n  this.$get = $get;\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$view\n   *\n   * @requires ui.router.util.$templateFactory\n   * @requires $rootScope\n   *\n   * @description\n   *\n   */\n  $get.$inject = ['$rootScope', '$templateFactory'];\n  function $get(   $rootScope,   $templateFactory) {\n    return {\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n      /**\n       * @ngdoc function\n       * @name ui.router.state.$view#load\n       * @methodOf ui.router.state.$view\n       *\n       * @description\n       *\n       * @param {string} name name\n       * @param {object} options option object.\n       */\n      load: function load(name, options) {\n        var result, defaults = {\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n        };\n        options = extend(defaults, options);\n\n        if (options.view) {\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n        }\n        if (result && options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$viewContentLoading\n         * @eventOf ui.router.state.$view\n         * @eventType broadcast on root scope\n         * @description\n         *\n         * Fired once the view **begins loading**, *before* the DOM is rendered.\n         *\n         * @param {Object} event Event object.\n         * @param {Object} viewConfig The view config properties (template, controller, etc).\n         *\n         * @example\n         *\n         * <pre>\n         * $scope.$on('$viewContentLoading',\n         * function(event, viewConfig){\n         *     // Access to all the view config properties.\n         *     // and one special property 'targetView'\n         *     // viewConfig.targetView\n         * });\n         * </pre>\n         */\n          $rootScope.$broadcast('$viewContentLoading', options);\n        }\n        return result;\n      }\n    };\n  }\n}\n\nangular.module('ui.router.state').provider('$view', $ViewProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$uiViewScrollProvider\n *\n * @description\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n   * @methodOf ui.router.state.$uiViewScrollProvider\n   *\n   * @description\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n   * scrolling based on the url anchor.\n   */\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$uiViewScroll\n   *\n   * @requires $anchorScroll\n   * @requires $timeout\n   *\n   * @description\n   * When called with a jqLite element, it scrolls the element into view (after a\n   * `$timeout` so the DOM has time to refresh).\n   *\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n   */\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element) {\n      $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-view\n *\n * @requires ui.router.state.$state\n * @requires $compile\n * @requires $controller\n * @requires $injector\n * @requires ui.router.state.$uiViewScroll\n * @requires $document\n *\n * @restrict ECA\n *\n * @description\n * The ui-view directive tells $state where to place your templates.\n *\n * @param {string=} name A view name. The name should be unique amongst the other views in the\n * same state. You can have views of the same name that live in different states.\n *\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n * scroll ui-view elements into view when they are populated during a state activation.\n *\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n *\n * @param {string=} onload Expression to evaluate whenever the view updates.\n * \n * @example\n * A view can be unnamed or named. \n * <pre>\n * <!-- Unnamed -->\n * <div ui-view></div> \n * \n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n * </pre>\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a \n * single view and it is unnamed then you can populate it like so:\n * <pre>\n * <div ui-view></div> \n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * </pre>\n * \n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\n * config property, by name, in this case an empty name:\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * But typically you'll only use the views property if you name your view or have more than one view \n * in the same template. There's not really a compelling reason to name a view if its the only one, \n * but you could if you wanted, like so:\n * <pre>\n * <div ui-view=\"main\"></div>\n * </pre> \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * Really though, you'll use views to set up multiple views:\n * <pre>\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div> \n * <div ui-view=\"data\"></div> \n * </pre>\n * \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Examples for `autoscroll`:\n *\n * <pre>\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * </pre>\n */\n$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate'];\nfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate) {\n\n  function getService() {\n    return ($injector.has) ? function(service) {\n      return $injector.has(service) ? $injector.get(service) : null;\n    } : function(service) {\n      try {\n        return $injector.get(service);\n      } catch (e) {\n        return null;\n      }\n    };\n  }\n\n  var service = getService(),\n      $animator = service('$animator'),\n      $animate = service('$animate');\n\n  // Returns a set of DOM manipulation functions based on which Angular version\n  // it should use\n  function getRenderer(attrs, scope) {\n    var statics = function() {\n      return {\n        enter: function (element, target, cb) { target.after(element); cb(); },\n        leave: function (element, cb) { element.remove(); cb(); }\n      };\n    };\n\n    if ($animate) {\n      return {\n        enter: function(element, target, cb) {\n          var promise = $animate.enter(element, null, target, cb);\n          if (promise && promise.then) promise.then(cb);\n        },\n        leave: function(element, cb) {\n          var promise = $animate.leave(element, cb);\n          if (promise && promise.then) promise.then(cb);\n        }\n      };\n    }\n\n    if ($animator) {\n      var animate = $animator && $animator(scope, attrs);\n\n      return {\n        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n        leave: function(element, cb) { animate.leave(element); cb(); }\n      };\n    }\n\n    return statics();\n  }\n\n  var directive = {\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement, tAttrs, $transclude) {\n      return function (scope, $element, attrs) {\n        var previousEl, currentEl, currentScope, latestLocals,\n            onloadExp     = attrs.onload || '',\n            autoScrollExp = attrs.autoscroll,\n            renderer      = getRenderer(attrs, scope);\n\n        scope.$on('$stateChangeSuccess', function() {\n          updateView(false);\n        });\n        scope.$on('$viewContentLoading', function() {\n          updateView(false);\n        });\n\n        updateView(true);\n\n        function cleanupLastView() {\n          if (previousEl) {\n            previousEl.remove();\n            previousEl = null;\n          }\n\n          if (currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n\n          if (currentEl) {\n            renderer.leave(currentEl, function() {\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n            currentEl = null;\n          }\n        }\n\n        function updateView(firstTime) {\n          var newScope,\n              name            = getUiViewName(scope, attrs, $element, $interpolate),\n              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\n          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\n          newScope = scope.$new();\n          latestLocals = $state.$current.locals[name];\n\n          var clone = $transclude(newScope, function(clone) {\n            renderer.enter(clone, $element, function onUiViewEnter() {\n              if(currentScope) {\n                currentScope.$emit('$viewContentAnimationEnded');\n              }\n\n              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n            cleanupLastView();\n          });\n\n          currentEl = clone;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description           *\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           */\n          currentScope.$emit('$viewContentLoaded');\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\nfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement) {\n      var initial = tElement.html();\n      return function (scope, $element, attrs) {\n        var current = $state.$current,\n            name = getUiViewName(scope, attrs, $element, $interpolate),\n            locals  = current && current.locals[name];\n\n        if (! locals) {\n          return;\n        }\n\n        $element.data('$uiView', { name: name, state: locals.$$state });\n        $element.html(locals.$template ? locals.$template : initial);\n\n        var link = $compile($element.contents());\n\n        if (locals.$$controller) {\n          locals.$scope = scope;\n          var controller = $controller(locals.$$controller, locals);\n          if (locals.$$controllerAs) {\n            scope[locals.$$controllerAs] = controller;\n          }\n          $element.data('$ngControllerController', controller);\n          $element.children().data('$ngControllerController', controller);\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/**\n * Shared ui-view code for both directives:\n * Given scope, element, and its attributes, return the view's name\n */\nfunction getUiViewName(scope, attrs, element, $interpolate) {\n  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n  var inherited = element.inheritedData('$uiView');\n  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (inherited ? inherited.state.name : ''));\n}\n\nangular.module('ui.router.state').directive('uiView', $ViewDirective);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\nfunction parseStateRef(ref, current) {\n  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1], paramExpr: parsed[3] || null };\n}\n\nfunction stateContext(el) {\n  var stateData = el.parent().inheritedData('$uiView');\n\n  if (stateData && stateData.state && stateData.state.name) {\n    return stateData.state;\n  }\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref\n *\n * @requires ui.router.state.$state\n * @requires $timeout\n *\n * @restrict A\n *\n * @description\n * A directive that binds a link (`<a>` tag) to a state. If the state has an associated \n * URL, the directive will automatically generate & update the `href` attribute via \n * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking \n * the link will trigger a state transition with optional parameters. \n *\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be \n * handled natively by the browser.\n *\n * You can also use relative state paths within ui-sref, just like the relative \n * paths passed to `$state.go()`. You just need to be aware that the path is relative\n * to the state that the link lives in, in other words the state that loaded the \n * template containing the link.\n *\n * You can specify options to pass to {@link ui.router.state.$state#go $state.go()}\n * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n * and `reload`.\n *\n * @example\n * Here's an example of how you'd use ui-sref and how it would compile. If you have the \n * following template:\n * <pre>\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n * \n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * </pre>\n * \n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n * <pre>\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n * \n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * </pre>\n *\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#go $state.go()}\n */\n$StateRefDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDirective($state, $timeout) {\n  var allowedOptions = ['location', 'inherit', 'reload'];\n\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var ref = parseStateRef(attrs.uiSref, $state.current.name);\n      var params = null, url = null, base = stateContext(element) || $state.$current;\n      var newHref = null, isAnchor = element.prop(\"tagName\") === \"A\";\n      var isForm = element[0].nodeName === \"FORM\";\n      var attr = isForm ? \"action\" : \"href\", nav = true;\n\n      var options = { relative: base, inherit: true };\n      var optionsOverride = scope.$eval(attrs.uiSrefOpts) || {};\n\n      angular.forEach(allowedOptions, function(option) {\n        if (option in optionsOverride) {\n          options[option] = optionsOverride[option];\n        }\n      });\n\n      var update = function(newVal) {\n        if (newVal) params = angular.copy(newVal);\n        if (!nav) return;\n\n        newHref = $state.href(ref.state, params, options);\n\n        var activeDirective = uiSrefActive[1] || uiSrefActive[0];\n        if (activeDirective) {\n          activeDirective.$$setStateInfo(ref.state, params);\n        }\n        if (newHref === null) {\n          nav = false;\n          return false;\n        }\n        attrs.$set(attr, newHref);\n      };\n\n      if (ref.paramExpr) {\n        scope.$watch(ref.paramExpr, function(newVal, oldVal) {\n          if (newVal !== params) update(newVal);\n        }, true);\n        params = angular.copy(scope.$eval(ref.paramExpr));\n      }\n      update();\n\n      if (isForm) return;\n\n      element.bind(\"click\", function(e) {\n        var button = e.which || e.button;\n        if ( !(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || element.attr('target')) ) {\n          // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n          var transition = $timeout(function() {\n            $state.go(ref.state, params, options);\n          });\n          e.preventDefault();\n\n          // if the state has no URL, ignore one preventDefault from the <a> directive.\n          var ignorePreventDefaultCount = isAnchor && !newHref ? 1: 0;\n          e.preventDefault = function() {\n            if (ignorePreventDefaultCount-- <= 0)\n              $timeout.cancel(transition);\n          };\n        }\n      });\n    }\n  };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * A directive working alongside ui-sref to add classes to an element when the\n * related ui-sref directive's state is active, and removing them when it is inactive.\n * The primary use-case is to simplify the special appearance of navigation menus\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n * distinguishing it from the inactive menu items.\n *\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n * ui-sref-active found at the same level or above the ui-sref will be used.\n *\n * Will activate when the ui-sref's target state or any child state is active. If you\n * need to activate only when the ui-sref target state is active and *not* any of\n * it's children, then you will use\n * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n *\n * @example\n * Given the following template:\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n *\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * Multiple classes may be specified in a space-separated format:\n * <pre>\n * <ul>\n *   <li ui-sref-active='class1 class2 class3'>\n *     <a ui-sref=\"app.user\">link</a>\n *   </li>\n * </ul>\n * </pre>\n */\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active-eq\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n * when the exact target state used in the `ui-sref` is active; no child states.\n *\n */\n$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\nfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n  return  {\n    restrict: \"A\",\n    controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n      var state, params, activeClass;\n\n      // There probably isn't much point in $observing this\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n      // slight difference in logic routing\n      activeClass = $interpolate($attrs.uiSrefActiveEq || $attrs.uiSrefActive || '', false)($scope);\n\n      // Allow uiSref to communicate with uiSrefActive[Equals]\n      this.$$setStateInfo = function (newState, newParams) {\n        state = $state.get(newState, stateContext($element));\n        params = newParams;\n        update();\n      };\n\n      $scope.$on('$stateChangeSuccess', update);\n\n      // Update route state\n      function update() {\n        if (isMatch()) {\n          $element.addClass(activeClass);\n        } else {\n          $element.removeClass(activeClass);\n        }\n      }\n\n      function isMatch() {\n        if (typeof $attrs.uiSrefActiveEq !== 'undefined') {\n          return state && $state.is(state.name, params);\n        } else {\n          return state && $state.includes(state.name, params);\n        }\n      }\n    }]\n  };\n}\n\nangular.module('ui.router.state')\n  .directive('uiSref', $StateRefDirective)\n  .directive('uiSrefActive', $StateRefActiveDirective)\n  .directive('uiSrefActiveEq', $StateRefActiveDirective);\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:isState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n  var isFilter = function (state) {\n    return $state.is(state);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:includedByState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n  var includesFilter = function (state) {\n    return $state.includes(state);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n})(window, window.angular);"]}