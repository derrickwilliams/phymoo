{"version":3,"sources":["/Users/derwilliams/workspace/me/projects/phymoo/www/lib/angular-sanitize/angular-sanitize.js"],"names":[],"mappings":";;;;;;;AAKA,CAAC,UAAS,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE;AAAC,cAAY,CAAC;;AAEpD,MAAI,eAAe,GAAG,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIpD,WAAS,iBAAiB,GAAG;AAC3B,QAAI,CAAC,IAAI,GAAG,CAAC,eAAe,EAAE,UAAS,aAAa,EAAE;AACpD,aAAO,UAAS,IAAI,EAAE;AACpB,YAAI,GAAG,GAAG,EAAE,CAAC;AACb,kBAAU,CAAC,IAAI,EAAE,kBAAkB,CAAC,GAAG,EAAE,UAAS,GAAG,EAAE,OAAO,EAAE;AAC9D,iBAAO,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;SACrD,CAAC,CAAC,CAAC;AACJ,eAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;OACrB,CAAC;KACH,CAAC,CAAC;GACJ;;AAED,WAAS,YAAY,CAAC,KAAK,EAAE;AAC3B,QAAI,GAAG,GAAG,EAAE,CAAC;AACb,QAAI,MAAM,GAAG,kBAAkB,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;AACnD,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpB,WAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GACrB;;;AAID,MAAI,gBAAgB,GACb,wGAAwG;MAC7G,cAAc,GAAG,wBAAwB;MACzC,WAAW,GAAG,yEAAyE;MACvF,gBAAgB,GAAG,IAAI;MACvB,sBAAsB,GAAG,MAAM;MAC/B,cAAc,GAAG,eAAe;MAChC,cAAc,GAAG,qBAAqB;MACtC,YAAY,GAAG,sBAAsB;MACrC,qBAAqB,GAAG,iCAAiC;;;AAEzD,yBAAuB,GAAG,gBAAgB,CAAC;;;;;;;;AAS7C,MAAI,YAAY,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;;;;AAIrD,MAAI,2BAA2B,GAAG,OAAO,CAAC,gDAAgD,CAAC;MACvF,4BAA4B,GAAG,OAAO,CAAC,OAAO,CAAC;MAC/C,sBAAsB,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,EACF,4BAA4B,EAC5B,2BAA2B,CAAC,CAAC;;;AAGzE,MAAI,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,2BAA2B,EAAE,OAAO,CAAC,kBAAkB,GACtF,yFAAyF,GACzF,qEAAqE,CAAC,CAAC,CAAC;;;AAGhF,MAAI,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,4BAA4B,EAAE,OAAO,CAAC,mBAAmB,GACzF,uFAAuF,GACvF,qDAAqD,CAAC,CAAC,CAAC;;;;AAIhE,MAAI,WAAW,GAAG,OAAO,CAAC,kEAAkE,GACpF,yFAAyF,GACzF,yFAAyF,GACzF,sCAAsC,CAAC,CAAC;;;AAGhD,MAAI,eAAe,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;AAE9C,MAAI,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,EACF,YAAY,EACZ,aAAa,EACb,cAAc,EACd,sBAAsB,EACtB,WAAW,CAAC,CAAC;;;AAGhD,MAAI,QAAQ,GAAG,OAAO,CAAC,qDAAqD,CAAC,CAAC;;AAE9E,MAAI,SAAS,GAAG,OAAO,CAAC,yEAAyE,GAC7F,4EAA4E,GAC5E,+DAA+D,GAC/D,kEAAkE,GAClE,2BAA2B,CAAC,CAAC;;;;AAIjC,MAAI,QAAQ,GAAG,OAAO,CAAC,kEAAkE,GACrF,wFAAwF,GACxF,2FAA2F,GAC3F,yFAAyF,GACzF,kFAAkF,GAClF,uFAAuF,GACvF,kFAAkF,GAClF,qFAAqF,GACrF,6FAA6F,GAC7F,sFAAsF,GACtF,sFAAsF,GACtF,wFAAwF,GACxF,2FAA2F,GAC3F,0FAA0F,GAC1F,0FAA0F,GAC1F,YAAY,CAAC,CAAC;;AAElB,MAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,EACF,QAAQ,EACR,QAAQ,EACR,SAAS,CAAC,CAAC;;AAE3C,WAAS,OAAO,CAAC,GAAG,EAAE;AACpB,QAAI,GAAG,GAAG,EAAE;QAAE,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;QAAE,CAAC,CAAC;AACxC,SAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACxD,WAAO,GAAG,CAAC;GACZ;;;;;;;;;;;;;;AAeD,WAAS,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE;AACjC,QAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,UAAI,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;AAChD,YAAI,GAAG,EAAE,CAAC;OACX,MAAM;AACL,YAAI,GAAG,EAAE,GAAG,IAAI,CAAC;OAClB;KACF;AACD,QAAI,KAAK;QAAE,KAAK;QAAE,KAAK;QAAE,KAAK,GAAG,EAAE;QAAE,IAAI,GAAG,IAAI;QAAE,IAAI,CAAC;AACvD,SAAK,CAAC,IAAI,GAAG,YAAW;AAAE,aAAO,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAAE,CAAC;;AAE5D,WAAO,IAAI,EAAE;AACX,UAAI,GAAG,EAAE,CAAC;AACV,WAAK,GAAG,IAAI,CAAC;;;AAGb,UAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE;;;AAGnD,YAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;;AAE9B,eAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;AAE9B,cAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,KAAK,EAAE;AAC1D,gBAAI,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/D,gBAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACjC,iBAAK,GAAG,KAAK,CAAC;WACf;;AAAA,SAEF,MAAM,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACpC,eAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;;AAEnC,cAAI,KAAK,EAAE;AACT,gBAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAClC,iBAAK,GAAG,KAAK,CAAC;WACf;;AAAA,SAEF,MAAM,IAAI,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC5C,eAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;;AAEnC,cAAI,KAAK,EAAE;AACT,gBAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AACvC,iBAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;AAC9C,iBAAK,GAAG,KAAK,CAAC;WACf;;;AAAA,SAGF,MAAM,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACtC,eAAK,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;;AAErC,cAAI,KAAK,EAAE;;AAET,gBAAI,KAAK,CAAC,CAAC,CAAC,EAAE;AACZ,kBAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AACvC,mBAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;aACnD;AACD,iBAAK,GAAG,KAAK,CAAC;WACf,MAAM;;AAEL,gBAAI,IAAI,GAAG,CAAC;AACZ,gBAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;WAC1B;SACF;;AAED,YAAI,KAAK,EAAE;AACT,eAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;;AAE1B,cAAI,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACpD,cAAI,GAAG,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;AAE9C,cAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;SACxD;OAEF,MAAM;;AAEL,YAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,yBAAyB,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,QAAQ,EAAE,GAAG,CAAC,EACtF,UAAS,GAAG,EAAE,IAAI,EAAE;AAClB,cAAI,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;;AAEtE,cAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEvD,iBAAO,EAAE,CAAC;SACb,CAAC,CAAC;;AAEH,mBAAW,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;OAC/B;;AAED,UAAI,IAAI,IAAI,IAAI,EAAE;AAChB,cAAM,eAAe,CAAC,UAAU,EAAE,wDAAwD,GACxD,cAAc,EAAE,IAAI,CAAC,CAAC;OACzD;AACD,UAAI,GAAG,IAAI,CAAC;KACb;;;AAGD,eAAW,EAAE,CAAC;;AAEd,aAAS,aAAa,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;AAChD,aAAO,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACrC,UAAI,aAAa,CAAC,OAAO,CAAC,EAAE;AAC1B,eAAO,KAAK,CAAC,IAAI,EAAE,IAAI,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE;AACnD,qBAAW,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;SAC/B;OACF;;AAED,UAAI,sBAAsB,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,IAAI,OAAO,EAAE;AAC9D,mBAAW,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;OAC1B;;AAED,WAAK,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;;AAEzC,UAAI,CAAC,KAAK,EACR,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAEtB,UAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,UAAI,CAAC,OAAO,CAAC,WAAW,EACtB,UAAS,KAAK,EAAE,IAAI,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,aAAa,EAAE;AACzE,YAAI,KAAK,GAAG,iBAAiB,IACxB,iBAAiB,IACjB,aAAa,IACb,EAAE,CAAC;;AAER,aAAK,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;OACvC,CAAC,CAAC;AACH,UAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;KACzD;;AAED,aAAS,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE;AACjC,UAAI,GAAG,GAAG,CAAC;UAAE,CAAC,CAAC;AACf,aAAO,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACrC,UAAI,OAAO;;AAET,aAAK,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAC1C,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,OAAO,EACvB,MAAM;;AAEZ,UAAI,GAAG,IAAI,CAAC,EAAE;;AAEZ,aAAK,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EACtC,IAAI,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;;AAGzC,aAAK,CAAC,MAAM,GAAG,GAAG,CAAC;OACpB;KACF;GACF;;AAED,MAAI,SAAS,GAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC5C,MAAI,OAAO,GAAG,wBAAwB,CAAC;;;;;;AAMvC,WAAS,cAAc,CAAC,KAAK,EAAE;AAC7B,QAAI,CAAC,KAAK,EAAE;AAAE,aAAO,EAAE,CAAC;KAAE;;;;AAI1B,QAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,QAAI,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,QAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1B,QAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACvB,QAAI,OAAO,EAAE;AACX,eAAS,CAAC,SAAS,GAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAC,MAAM,CAAC,CAAC;;;;;AAKjD,aAAO,GAAG,aAAa,IAAI,SAAS,GAClC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,SAAS,CAAC;KAC/C;AACD,WAAO,WAAW,GAAG,OAAO,GAAG,UAAU,CAAC;GAC3C;;;;;;;;;AASD,WAAS,cAAc,CAAC,KAAK,EAAE;AAC7B,WAAO,KAAK,CACV,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CACtB,OAAO,CAAC,qBAAqB,EAAE,UAAS,KAAK,EAAE;AAC7C,UAAI,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7B,UAAI,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC9B,aAAO,IAAI,IAAI,AAAC,CAAC,EAAE,GAAG,KAAM,CAAA,GAAI,IAAK,IAAK,GAAG,GAAG,KAAM,CAAA,AAAC,GAAG,KAAO,CAAA,AAAC,GAAG,GAAG,CAAC;KAC1E,CAAC,CACF,OAAO,CAAC,uBAAuB,EAAE,UAAS,KAAK,EAAE;AAC/C,aAAO,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KACzC,CAAC,CACF,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CACrB,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;GACzB;;;;;;;;;;;;AAYD,WAAS,kBAAkB,CAAC,GAAG,EAAE,YAAY,EAAE;AAC7C,QAAI,MAAM,GAAG,KAAK,CAAC;AACnB,QAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACtC,WAAO;AACL,WAAK,EAAE,eAAS,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;AACjC,WAAG,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAC7B,YAAI,CAAC,MAAM,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE;AACnC,gBAAM,GAAG,GAAG,CAAC;SACd;AACD,YAAI,CAAC,MAAM,IAAI,aAAa,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;AAC1C,aAAG,CAAC,GAAG,CAAC,CAAC;AACT,aAAG,CAAC,GAAG,CAAC,CAAC;AACT,iBAAO,CAAC,OAAO,CAAC,KAAK,EAAE,UAAS,KAAK,EAAE,GAAG,EAAE;AAC1C,gBAAI,IAAI,GAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAChC,gBAAI,OAAO,GAAG,AAAC,GAAG,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAM,IAAI,KAAK,YAAY,AAAC,CAAC;AAC3E,gBAAI,UAAU,CAAC,IAAI,CAAC,KAAK,IAAI,KAC1B,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA,AAAC,EAAE;AAC3D,iBAAG,CAAC,GAAG,CAAC,CAAC;AACT,iBAAG,CAAC,GAAG,CAAC,CAAC;AACT,iBAAG,CAAC,KAAI,CAAC,CAAC;AACV,iBAAG,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3B,iBAAG,CAAC,IAAG,CAAC,CAAC;aACV;WACF,CAAC,CAAC;AACH,aAAG,CAAC,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;SACzB;OACF;AACD,SAAG,EAAE,aAAS,GAAG,EAAE;AACf,WAAG,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAC7B,YAAI,CAAC,MAAM,IAAI,aAAa,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;AAC1C,aAAG,CAAC,IAAI,CAAC,CAAC;AACV,aAAG,CAAC,GAAG,CAAC,CAAC;AACT,aAAG,CAAC,GAAG,CAAC,CAAC;SACV;AACD,YAAI,GAAG,IAAI,MAAM,EAAE;AACjB,gBAAM,GAAG,KAAK,CAAC;SAChB;OACF;AACH,WAAK;;;;;;;;;;SAAE,UAAS,KAAK,EAAE;AACnB,YAAI,CAAC,MAAM,EAAE;AACX,aAAG,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;SAC5B;OACF,CAAA;KACJ,CAAC;GACH;;;AAID,SAAO,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwG1E,SAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,UAAS,SAAS,EAAE;AAC7E,QAAI,gBAAgB,GACd,8EAA8E;QAChF,aAAa,GAAG,UAAU,CAAC;;AAE/B,WAAO,UAAS,IAAI,EAAE,MAAM,EAAE;AAC5B,UAAI,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC;AACvB,UAAI,KAAK,CAAC;AACV,UAAI,GAAG,GAAG,IAAI,CAAC;AACf,UAAI,IAAI,GAAG,EAAE,CAAC;AACd,UAAI,GAAG,CAAC;AACR,UAAI,CAAC,CAAC;AACN,aAAQ,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAG;;AAE5C,WAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEf,YAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;AAC1B,aAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,SAAS,CAAA,GAAI,GAAG,CAAC;SAChD;AACD,SAAC,GAAG,KAAK,CAAC,KAAK,CAAC;AAChB,eAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1B,eAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;AAClD,WAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;OAC1C;AACD,aAAO,CAAC,GAAG,CAAC,CAAC;AACb,aAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEhC,eAAS,OAAO,CAAC,IAAI,EAAE;AACrB,YAAI,CAAC,IAAI,EAAE;AACT,iBAAO;SACR;AACD,YAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;OAC/B;;AAED,eAAS,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE;AAC1B,YAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjB,YAAI,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;AAC7B,cAAI,CAAC,IAAI,CAAC,WAAU,EACV,MAAM,EACN,KAAI,CAAC,CAAC;SACjB;AACD,YAAI,CAAC,IAAI,CAAC,SAAQ,EACR,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,EAC3B,KAAI,CAAC,CAAC;AAChB,eAAO,CAAC,IAAI,CAAC,CAAC;AACd,YAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;OACnB;KACF,CAAC;GACH,CAAC,CAAC,CAAC;CAGH,CAAA,CAAE,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC","file":"angular-sanitize-compiled.js","sourcesContent":["/**\n * @license AngularJS v1.3.13\n * (c) 2010-2014 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {'use strict';\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * # ngSanitize\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n *\n * <div doc-module-components=\"ngSanitize\"></div>\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/*\n * HTML Parser By Misko Hevery (misko@hevery.com)\n * based on:  HTML Parser By John Resig (ejohn.org)\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n *\n * // Use like so:\n * htmlParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n */\n\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string, however, since our parser is more strict than a typical browser\n *   parser, it's possible that some obscure input, which would be recognized as valid HTML by a\n *   browser, won't make it through the sanitizer. The input may also contain SVG markup.\n *   The whitelist is configured using the functions `aHrefSanitizationWhitelist` and\n *   `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider `$compileProvider`}.\n *\n * @param {string} html HTML input.\n * @returns {string} Sanitized HTML.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getInnerHtml()).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getInnerHtml()).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getInnerHtml()).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getInnerHtml()).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getInnerHtml()).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getInnerHtml()).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\nfunction $SanitizeProvider() {\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, angular.noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// Regular Expressions for parsing tags and attributes\nvar START_TAG_REGEXP =\n       /^<((?:[a-zA-Z])[\\w:-]*)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*(>?)/,\n  END_TAG_REGEXP = /^<\\/\\s*([\\w:-]+)[^>]*>/,\n  ATTR_REGEXP = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g,\n  BEGIN_TAG_REGEXP = /^</,\n  BEGING_END_TAGE_REGEXP = /^<\\//,\n  COMMENT_REGEXP = /<!--(.*?)-->/g,\n  DOCTYPE_REGEXP = /<!DOCTYPE([^>]*?)>/i,\n  CDATA_REGEXP = /<!\\[CDATA\\[(.*?)]]>/g,\n  SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n  // Match everything outside of normal chars and \" (quote character)\n  NON_ALPHANUMERIC_REGEXP = /([^\\#-~| |!])/g;\n\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar voidElements = makeMap(\"area,br,col,hr,img,wbr\");\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar optionalEndTagBlockElements = makeMap(\"colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr\"),\n    optionalEndTagInlineElements = makeMap(\"rp,rt\"),\n    optionalEndTagElements = angular.extend({},\n                                            optionalEndTagInlineElements,\n                                            optionalEndTagBlockElements);\n\n// Safe Block Elements - HTML5\nvar blockElements = angular.extend({}, optionalEndTagBlockElements, makeMap(\"address,article,\" +\n        \"aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,\" +\n        \"h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul\"));\n\n// Inline Elements - HTML5\nvar inlineElements = angular.extend({}, optionalEndTagInlineElements, makeMap(\"a,abbr,acronym,b,\" +\n        \"bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,\" +\n        \"samp,small,span,strike,strong,sub,sup,time,tt,u,var\"));\n\n// SVG Elements\n// https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\nvar svgElements = makeMap(\"animate,animateColor,animateMotion,animateTransform,circle,defs,\" +\n        \"desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,\" +\n        \"line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,set,\" +\n        \"stop,svg,switch,text,title,tspan,use\");\n\n// Special Elements (can contain anything)\nvar specialElements = makeMap(\"script,style\");\n\nvar validElements = angular.extend({},\n                                   voidElements,\n                                   blockElements,\n                                   inlineElements,\n                                   optionalEndTagElements,\n                                   svgElements);\n\n//Attributes that have href and hence need to be sanitized\nvar uriAttrs = makeMap(\"background,cite,href,longdesc,src,usemap,xlink:href\");\n\nvar htmlAttrs = makeMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\n    'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\n    'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,span,start,summary,target,title,type,' +\n    'valign,value,vspace,width');\n\n// SVG attributes (without \"id\" and \"name\" attributes)\n// https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\nvar svgAttrs = makeMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\n    'attributeName,attributeType,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,' +\n    'color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,' +\n    'font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,' +\n    'gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,' +\n    'keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,' +\n    'markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,' +\n    'overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,' +\n    'repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,' +\n    'stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,' +\n    'stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,' +\n    'stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,' +\n    'underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,' +\n    'viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,' +\n    'xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,' +\n    'zoomAndPan');\n\nvar validAttrs = angular.extend({},\n                                uriAttrs,\n                                svgAttrs,\n                                htmlAttrs);\n\nfunction makeMap(str) {\n  var obj = {}, items = str.split(','), i;\n  for (i = 0; i < items.length; i++) obj[items[i]] = true;\n  return obj;\n}\n\n\n/**\n * @example\n * htmlParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n * @param {string} html string\n * @param {object} handler\n */\nfunction htmlParser(html, handler) {\n  if (typeof html !== 'string') {\n    if (html === null || typeof html === 'undefined') {\n      html = '';\n    } else {\n      html = '' + html;\n    }\n  }\n  var index, chars, match, stack = [], last = html, text;\n  stack.last = function() { return stack[stack.length - 1]; };\n\n  while (html) {\n    text = '';\n    chars = true;\n\n    // Make sure we're not in a script or style element\n    if (!stack.last() || !specialElements[stack.last()]) {\n\n      // Comment\n      if (html.indexOf(\"<!--\") === 0) {\n        // comments containing -- are not allowed unless they terminate the comment\n        index = html.indexOf(\"--\", 4);\n\n        if (index >= 0 && html.lastIndexOf(\"-->\", index) === index) {\n          if (handler.comment) handler.comment(html.substring(4, index));\n          html = html.substring(index + 3);\n          chars = false;\n        }\n      // DOCTYPE\n      } else if (DOCTYPE_REGEXP.test(html)) {\n        match = html.match(DOCTYPE_REGEXP);\n\n        if (match) {\n          html = html.replace(match[0], '');\n          chars = false;\n        }\n      // end tag\n      } else if (BEGING_END_TAGE_REGEXP.test(html)) {\n        match = html.match(END_TAG_REGEXP);\n\n        if (match) {\n          html = html.substring(match[0].length);\n          match[0].replace(END_TAG_REGEXP, parseEndTag);\n          chars = false;\n        }\n\n      // start tag\n      } else if (BEGIN_TAG_REGEXP.test(html)) {\n        match = html.match(START_TAG_REGEXP);\n\n        if (match) {\n          // We only have a valid start-tag if there is a '>'.\n          if (match[4]) {\n            html = html.substring(match[0].length);\n            match[0].replace(START_TAG_REGEXP, parseStartTag);\n          }\n          chars = false;\n        } else {\n          // no ending tag found --- this piece should be encoded as an entity.\n          text += '<';\n          html = html.substring(1);\n        }\n      }\n\n      if (chars) {\n        index = html.indexOf(\"<\");\n\n        text += index < 0 ? html : html.substring(0, index);\n        html = index < 0 ? \"\" : html.substring(index);\n\n        if (handler.chars) handler.chars(decodeEntities(text));\n      }\n\n    } else {\n      // IE versions 9 and 10 do not understand the regex '[^]', so using a workaround with [\\W\\w].\n      html = html.replace(new RegExp(\"([\\\\W\\\\w]*)<\\\\s*\\\\/\\\\s*\" + stack.last() + \"[^>]*>\", 'i'),\n        function(all, text) {\n          text = text.replace(COMMENT_REGEXP, \"$1\").replace(CDATA_REGEXP, \"$1\");\n\n          if (handler.chars) handler.chars(decodeEntities(text));\n\n          return \"\";\n      });\n\n      parseEndTag(\"\", stack.last());\n    }\n\n    if (html == last) {\n      throw $sanitizeMinErr('badparse', \"The sanitizer was unable to parse the following block \" +\n                                        \"of html: {0}\", html);\n    }\n    last = html;\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function parseStartTag(tag, tagName, rest, unary) {\n    tagName = angular.lowercase(tagName);\n    if (blockElements[tagName]) {\n      while (stack.last() && inlineElements[stack.last()]) {\n        parseEndTag(\"\", stack.last());\n      }\n    }\n\n    if (optionalEndTagElements[tagName] && stack.last() == tagName) {\n      parseEndTag(\"\", tagName);\n    }\n\n    unary = voidElements[tagName] || !!unary;\n\n    if (!unary)\n      stack.push(tagName);\n\n    var attrs = {};\n\n    rest.replace(ATTR_REGEXP,\n      function(match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n        var value = doubleQuotedValue\n          || singleQuotedValue\n          || unquotedValue\n          || '';\n\n        attrs[name] = decodeEntities(value);\n    });\n    if (handler.start) handler.start(tagName, attrs, unary);\n  }\n\n  function parseEndTag(tag, tagName) {\n    var pos = 0, i;\n    tagName = angular.lowercase(tagName);\n    if (tagName)\n      // Find the closest opened tag of the same type\n      for (pos = stack.length - 1; pos >= 0; pos--)\n        if (stack[pos] == tagName)\n          break;\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (i = stack.length - 1; i >= pos; i--)\n        if (handler.end) handler.end(stack[i]);\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n    }\n  }\n}\n\nvar hiddenPre=document.createElement(\"pre\");\nvar spaceRe = /^(\\s*)([\\s\\S]*?)(\\s*)$/;\n/**\n * decodes all entities into regular string\n * @param value\n * @returns {string} A string with decoded entities.\n */\nfunction decodeEntities(value) {\n  if (!value) { return ''; }\n\n  // Note: IE8 does not preserve spaces at the start/end of innerHTML\n  // so we must capture them and reattach them afterward\n  var parts = spaceRe.exec(value);\n  var spaceBefore = parts[1];\n  var spaceAfter = parts[3];\n  var content = parts[2];\n  if (content) {\n    hiddenPre.innerHTML=content.replace(/</g,\"&lt;\");\n    // innerText depends on styling as it doesn't display hidden elements.\n    // Therefore, it's better to use textContent not to cause unnecessary\n    // reflows. However, IE<9 don't support textContent so the innerText\n    // fallback is necessary.\n    content = 'textContent' in hiddenPre ?\n      hiddenPre.textContent : hiddenPre.innerText;\n  }\n  return spaceBefore + content + spaceAfter;\n}\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n * @returns {string} escaped text\n */\nfunction encodeEntities(value) {\n  return value.\n    replace(/&/g, '&amp;').\n    replace(SURROGATE_PAIR_REGEXP, function(value) {\n      var hi = value.charCodeAt(0);\n      var low = value.charCodeAt(1);\n      return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    }).\n    replace(NON_ALPHANUMERIC_REGEXP, function(value) {\n      return '&#' + value.charCodeAt(0) + ';';\n    }).\n    replace(/</g, '&lt;').\n    replace(/>/g, '&gt;');\n}\n\n/**\n * create an HTML/XML writer which writes to buffer\n * @param {Array} buf use buf.jain('') to get out sanitized html string\n * @returns {object} in the form of {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * }\n */\nfunction htmlSanitizeWriter(buf, uriValidator) {\n  var ignore = false;\n  var out = angular.bind(buf, buf.push);\n  return {\n    start: function(tag, attrs, unary) {\n      tag = angular.lowercase(tag);\n      if (!ignore && specialElements[tag]) {\n        ignore = tag;\n      }\n      if (!ignore && validElements[tag] === true) {\n        out('<');\n        out(tag);\n        angular.forEach(attrs, function(value, key) {\n          var lkey=angular.lowercase(key);\n          var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n          if (validAttrs[lkey] === true &&\n            (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n            out(' ');\n            out(key);\n            out('=\"');\n            out(encodeEntities(value));\n            out('\"');\n          }\n        });\n        out(unary ? '/>' : '>');\n      }\n    },\n    end: function(tag) {\n        tag = angular.lowercase(tag);\n        if (!ignore && validElements[tag] === true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        if (tag == ignore) {\n          ignore = false;\n        }\n      },\n    chars: function(chars) {\n        if (!ignore) {\n          out(encodeEntities(chars));\n        }\n      }\n  };\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', []).provider('$sanitize', $SanitizeProvider);\n\n/* global sanitizeText: false */\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports http/https/ftp/mailto and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} target Window (_blank|_self|_parent|_top) or named frame to open links in.\n * @returns {string} Html-linkified text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('linkyExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.snippet =\n               'Pretty text with some links:\\n'+\n               'http://angularjs.org/,\\n'+\n               'mailto:us@somewhere.org,\\n'+\n               'another@somewhere.org,\\n'+\n               'and one more: ftp://127.0.0.1/.';\n             $scope.snippetWithTarget = 'http://angularjs.org/';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Filter</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithTarget | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithTarget | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithTarget | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((ftp|https?):\\/\\/|(www\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"”’]/,\n      MAILTO_REGEXP = /^mailto:/;\n\n  return function(text, target) {\n    if (!text) return text;\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/www/mailto then assume mailto\n      if (!match[2] && !match[4]) {\n        url = (match[3] ? 'http://' : 'mailto:') + url;\n      }\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      html.push('<a ');\n      if (angular.isDefined(target)) {\n        html.push('target=\"',\n                  target,\n                  '\" ');\n      }\n      html.push('href=\"',\n                url.replace(/\"/g, '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n"]}